[{"path":"https://lmjl-alea.github.io/rgeomstats/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rgeomstats authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aymeric Stamm. Author, maintainer.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stamm (2022). rgeomstats: R Interface Geomstats. https://github.com/LMJL-Alea/rgeomstats, https://lmjl-alea.github.io/rgeomstats/.","code":"@Manual{,   title = {rgeomstats: An R Interface to Geomstats},   author = {Aymeric Stamm},   year = {2022},   note = {https://github.com/LMJL-Alea/rgeomstats, https://lmjl-alea.github.io/rgeomstats/}, }"},{"path":"https://lmjl-alea.github.io/rgeomstats/index.html","id":"rgeomstats","dir":"","previous_headings":"","what":"An R Interface to Geomstats","title":"An R Interface to Geomstats","text":"goal rgeomstats provide accessibility Geomstats Python library community R users.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Interface to Geomstats","text":"can install development version rgeomstats like :","code":"# install.packages(\"remotes\") remotes::install_github(\"LMJL-Alea/rgeomstats\")"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":null,"dir":"Reference","previous_headings":"","what":"N-Fold Product Manifold — NFoldManifold","title":"N-Fold Product Manifold — NFoldManifold","text":"Class \\(n\\)-fold product manifold \\(M^n\\). defines manifold product manifold \\(n\\) copies given base manifold \\(M\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"N-Fold Product Manifold — NFoldManifold","text":"Nicolas Guigui","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"N-Fold Product Manifold — NFoldManifold","text":"rgeomstats::PythonClass -> NFoldManifold","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"N-Fold Product Manifold — NFoldManifold","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"N-Fold Product Manifold — NFoldManifold","text":"NFoldManifold$new() NFoldManifold$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"N-Fold Product Manifold — NFoldManifold","text":"NFoldManifold class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"N-Fold Product Manifold — NFoldManifold","text":"","code":"NFoldManifold$new(   base_manifold,   n_copies,   metric = NULL,   default_coords_type = \"intrinsic\" )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"N-Fold Product Manifold — NFoldManifold","text":"base_manifold R6::R6Class specifying base manifold copy. n_copies integer value specifying number replication base manifold. metric R6::R6Class specifying base metric use. Defaults NULL uses Riemannian metric. default_coords_type string specifying coordinate type. Choices \"intrinsic\" \"extrinsic\". Defaults \"intrinsic\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"N-Fold Product Manifold — NFoldManifold","text":"NFoldManifold R6::R6Class object.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"N-Fold Product Manifold — NFoldManifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   nfm <- NFoldManifold$new(     base_manifold = SPDMatrices$new(n = 3),     n_copies = 3   )   nfm }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"N-Fold Product Manifold — NFoldManifold","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"N-Fold Product Manifold — NFoldManifold","text":"","code":"NFoldManifold$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"N-Fold Product Manifold — NFoldManifold","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"N-Fold Product Manifold — NFoldManifold","text":"","code":"## ------------------------------------------------ ## Method `NFoldManifold$new` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   nfm <- NFoldManifold$new(     base_manifold = SPDMatrices$new(n = 3),     n_copies = 3   )   nfm }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Class manifold symmetric positive definite (SPD) matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Yann Thanwerdas","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"rgeomstats::PythonClass -> SPDMatrices","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPDMatrices$new() SPDMatrices$belongs() SPDMatrices$cholesky_factor() SPDMatrices$differential_cholesky_factor() SPDMatrices$differential_exp() SPDMatrices$differential_log() SPDMatrices$differential_power() SPDMatrices$expm() SPDMatrices$logm() SPDMatrices$powerm() SPDMatrices$inverse_differential_exp() SPDMatrices$inverse_differential_log() SPDMatrices$inverse_differential_power() SPDMatrices$projection() SPDMatrices$random_point() SPDMatrices$random_tangent_vec() SPDMatrices$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPDMatrices class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$new(n)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"n integer value representing shape n x n matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPDMatrices R6::R6Class object.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-belongs-","dir":"Reference","previous_headings":"","what":"Method belongs()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Check matrix symmetric positive eigenvalues.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$belongs(mat, atol = 1e-12)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat numeric matrix checked. atol numeric value specifying absolute tolerance checking. Defaults 1e-12.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"boolean tells whether input matrix SPD.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   A <- diag(1, 3)   spdm$belongs(A)   B <- diag(-1, 3)   spdm$belongs(B) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-cholesky-factor-","dir":"Reference","previous_headings":"","what":"Method cholesky_factor()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes Cholesky factor symmetric positive definite matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$cholesky_factor(mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat SPD matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Cholesky factor represented numeric vector stores lower triangular matrix including diagonal elements column-major fashion.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$cholesky_factor(A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-cholesky-factor-","dir":"Reference","previous_headings":"","what":"Method differential_cholesky_factor()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential Cholesky factor map.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_cholesky_factor(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec symmetric matrix specifying tangent vector base point. base_point SPD matrix specifying base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"differential Cholesky factor map represented numeric vector stores lower triangular matrix including diagonal elements column-major fashion.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_cholesky_factor(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-exp-","dir":"Reference","previous_headings":"","what":"Method differential_exp()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential matrix exponential.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_exp(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec symmetric matrix specifying tangent vector base point. base_point SPD matrix specifying base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"matrix storing differential matrix exponential SPD matrices base_point applied tangent_vec.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_exp(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-log-","dir":"Reference","previous_headings":"","what":"Method differential_log()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential matrix logarithm.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_log(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec symmetric matrix specifying tangent vector base point. base_point SPD matrix specifying base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"matrix storing differential matrix logarithm SPD matrices base_point applied tangent_vec.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_log(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-power-","dir":"Reference","previous_headings":"","what":"Method differential_power()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential matrix power function.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_power(power, tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"power integer scalar specifying desired power. tangent_vec symmetric matrix specifying tangent vector base point. base_point SPD matrix specifying base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"matrix storing differential power function \\(\\mathrm{SPD}(n)\\): $$^p = \\exp(p \\log())$$ base_point applied tangent_vec.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_power(2, diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-expm-","dir":"Reference","previous_headings":"","what":"Method expm()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes matrix exponential symmetric matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$expm(mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat symmetric matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPD matrix storing exponential input symmetric matrix mat.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm$expm(diag(-1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-logm-","dir":"Reference","previous_headings":"","what":"Method logm()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes matrix logarithm SPD matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$logm(mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat SPD matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"symmetric matrix storing logarithm input symmetric matrix mat.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm$logm(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-powerm-","dir":"Reference","previous_headings":"","what":"Method powerm()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes matrix power SPD matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$powerm(mat, power)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat SPD matrix. power numeric scalar vector specifying desired power(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPD matrix representing matrix power input matrix : $$^p = \\exp(p \\log()).$$ power vector, list matrices elevated corresponding powers.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$powerm(diag(1, 3), 2) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-inverse-differential-exp-","dir":"Reference","previous_headings":"","what":"Method inverse_differential_exp()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes inverse differential matrix exponential.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$inverse_differential_exp(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec symmetric matrix specifying tangent vector base point. base_point SPD matrix specifying base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"matrix storing inverse differential matrix exponential SPD matrices base_point applied tangent_vec.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$inverse_differential_exp(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-inverse-differential-log-","dir":"Reference","previous_headings":"","what":"Method inverse_differential_log()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes inverse differential matrix logarithm.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$inverse_differential_log(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec symmetric matrix specifying tangent vector base point. base_point SPD matrix specifying base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"matrix storing inverse differential matrix logarithm SPD matrices base_point applied tangent_vec.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$inverse_differential_log(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-inverse-differential-power-","dir":"Reference","previous_headings":"","what":"Method inverse_differential_power()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes inverse differential matrix power function.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$inverse_differential_power(power, tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"power integer scalar specifying desired power. tangent_vec symmetric matrix specifying tangent vector base point. base_point SPD matrix specifying base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"matrix storing inverse differential power function \\(\\mathrm{SPD}(n)\\): $$^p = \\exp(p \\log())$$ base_point applied tangent_vec.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-12","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$inverse_differential_power(2, diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-projection-","dir":"Reference","previous_headings":"","what":"Method projection()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Projects square matrix space SPD matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$projection(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"point square matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"First symmetric part point computed, eigenvalues floored gs.atol.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPD matrix obtained projecting input square matrix onto space SPD matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-13","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   A <- matrix(1:9, 3, 3)   spdm$projection(A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-random-point-","dir":"Reference","previous_headings":"","what":"Method random_point()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Samples \\(\\mathrm{SPD}(n)\\) log-uniform distribution.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$random_point(n_samples = 1, bound = 1)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"n_samples integer value specifying sample size. Defaults 1L. bound numeric value specifying bound interval sample tangent space. Defaults 1.0.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"list SPD matrices sampled \\(\\mathrm{SPD}(n)\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-14","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   # spdm$random_point(10) # TO DO: uncomment when bug fixed in gs }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-random-tangent-vec-","dir":"Reference","previous_headings":"","what":"Method random_tangent_vec()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Samples tangent space \\(\\mathrm{SPD}(n)\\) uniform distribution.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$random_tangent_vec(base_point, n_samples = 1)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"base_point SPD matrix specifying base point. n_samples integer value specifying sample size. Defaults 1L.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"list symmetric matrices sampled tangent space \\(\\mathrm{SPD}(n)\\) base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-15","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm$random_tangent_vec(diag(1, 3), 10) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"## ------------------------------------------------ ## Method `SPDMatrices$new` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm }  ## ------------------------------------------------ ## Method `SPDMatrices$belongs` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   A <- diag(1, 3)   spdm$belongs(A)   B <- diag(-1, 3)   spdm$belongs(B) }  ## ------------------------------------------------ ## Method `SPDMatrices$cholesky_factor` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$cholesky_factor(A) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_cholesky_factor` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_cholesky_factor(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_exp` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_exp(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_log` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_log(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_power` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$differential_power(2, diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$expm` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm$expm(diag(-1, 3)) }  ## ------------------------------------------------ ## Method `SPDMatrices$logm` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm$logm(diag(1, 3)) }  ## ------------------------------------------------ ## Method `SPDMatrices$powerm` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$powerm(diag(1, 3), 2) }  ## ------------------------------------------------ ## Method `SPDMatrices$inverse_differential_exp` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$inverse_differential_exp(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$inverse_differential_log` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$inverse_differential_log(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$inverse_differential_power` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spdm$inverse_differential_power(2, diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$projection` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   A <- matrix(1:9, 3, 3)   spdm$projection(A) }  ## ------------------------------------------------ ## Method `SPDMatrices$random_point` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   # spdm$random_point(10) # TO DO: uncomment when bug fixed in gs }  ## ------------------------------------------------ ## Method `SPDMatrices$random_tangent_vec` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spdm <- SPDMatrices$new(n = 3)   spdm$random_tangent_vec(diag(1, 3), 10) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/rgeomstats-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rgeomstats: An R Interface to Geomstats — rgeomstats-package","title":"rgeomstats: An R Interface to Geomstats — rgeomstats-package","text":"Provides R interface Python package Geomstats.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/rgeomstats-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rgeomstats: An R Interface to Geomstats — rgeomstats-package","text":"Maintainer: Aymeric Stamm aymeric.stamm@math.cnrs.fr (ORCID)","code":""}]
