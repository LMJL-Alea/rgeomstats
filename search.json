[{"path":"https://lmjl-alea.github.io/rgeomstats/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 rgeomstats authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Aymeric Stamm. Author, maintainer. Nicolas Guigui. Contributor.            Author Geomstats Python package Alice Le Brigant. Contributor.            Author Geomstats Python package Johan Mathe. Contributor.            Author Geomstats Python package Nina Miolane. Contributor.            Author Geomstats Python package Xavier Pennec. Contributor.            Author Geomstats Python package Luis Pereira. Contributor.            Author Geomstats Python package Yann Thanwerdas. Contributor.            Author Geomstats Python package","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stamm (2022). rgeomstats: R Interface Geomstats. https://github.com/LMJL-Alea/rgeomstats, https://lmjl-alea.github.io/rgeomstats/.","code":"@Manual{,   title = {rgeomstats: An R Interface to Geomstats},   author = {Aymeric Stamm},   year = {2022},   note = {https://github.com/LMJL-Alea/rgeomstats, https://lmjl-alea.github.io/rgeomstats/}, }"},{"path":"https://lmjl-alea.github.io/rgeomstats/index.html","id":"rgeomstats-","dir":"","previous_headings":"","what":"An R Interface to Geomstats","title":"An R Interface to Geomstats","text":"goal rgeomstats provide accessibility Geomstats Python library community R users R interface mimics closely possible carefully designed Python API.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R Interface to Geomstats","text":"can install development version rgeomstats via:","code":"# install.packages(\"remotes\") remotes::install_github(\"LMJL-Alea/rgeomstats\")"},{"path":"https://lmjl-alea.github.io/rgeomstats/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R Interface to Geomstats","text":"can instantiate space (3) 3D rotations sample random points space follows: Geomstats-like computations stored arrays. particular, sample IDs always stored along first dimension. Hence, always possible convert sample list via:","code":"library(rgeomstats) so3 <- SpecialOrthogonal(n = 3) spl <- so3$random_point(n_samples = 5) dim(spl) #> [1] 5 3 3 purrr::array_tree(spl, margin = 1) #> [[1]] #>             [,1]       [,2]      [,3] #> [1,] -0.03532813 -0.9154660 0.4008416 #> [2,]  0.68066355  0.2716386 0.6803746 #> [3,] -0.73174384  0.2968746 0.6135278 #>  #> [[2]] #>            [,1]          [,2]      [,3] #> [1,] -0.3117327 -0.8280555376 0.4659901 #> [2,]  0.8305219  0.0007836864 0.5569855 #> [3,] -0.4615801  0.5606455319 0.6874739 #>  #> [[3]] #>            [,1]        [,2]       [,3] #> [1,] -0.7025064  0.66878384 -0.2433370 #> [2,] -0.3513459 -0.02856766  0.9358098 #> [3,]  0.6189029  0.74290785  0.2550434 #>  #> [[4]] #>            [,1]       [,2]       [,3] #> [1,] -0.8970871 -0.2258339  0.3797811 #> [2,] -0.1157827 -0.7093377 -0.6952945 #> [3,]  0.4264141 -0.6677119  0.6101900 #>  #> [[5]] #>            [,1]       [,2]       [,3] #> [1,] -0.3877247 -0.3760100 -0.8415973 #> [2,]  0.4484487 -0.8746292  0.1841673 #> [3,] -0.8053343 -0.3060069  0.5077366"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Connections — Connection","title":"Abstract Class for Connections — Connection","text":"R6::R6Class object implementing base Connection class affine connections.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Connections — Connection","text":"Nicolas Guigui","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Abstract Class for Connections — Connection","text":"rgeomstats::PythonClass -> Connection","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Connections — Connection","text":"dim integer value specifying dimension underlying manifold. shape integer vector specifying shape one element manifold. Defaults NULL. default_coords_type string specifying coordinate type. Choices extrensic intrinsic. Dedaults intrinsic. default_point_type string specifying point type. Choices vector matrix. automatically determined depending manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Connections — Connection","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Connections — Connection","text":"Connection$new() Connection$christoffels() Connection$geodesic_equation() Connection$exp() Connection$log() Connection$ladder_parallel_transport() Connection$curvature() Connection$directional_curvature() Connection$curvature_derivative() Connection$directional_curvature_derivative() Connection$geodesic() Connection$parallel_transport() Connection$injectivity_radius() Connection$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Connections — Connection","text":"Connection class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$new(   dim,   shape = NULL,   default_coords_type = \"intrinsic\",   py_cls = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"dim integer value specifying dimension manifold. shape integer vector specifying shape one element manifold. Defaults NULL. default_coords_type string specifying coordinate type. Choices extrensic intrinsic. Defaults intrinsic. py_cls Python object class Connection. Defaults NULL case instantiated fly using input arguments. metric RiemannianMetric object specifying metric use manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"object class Connection.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-christoffels-","dir":"Reference","previous_headings":"","what":"Method christoffels()","title":"Abstract Class for Connections — Connection","text":"Christoffel symbols associated connection.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$christoffels(base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"base_point numeric array shape dim specifying base point manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"numeric array shape c(dim, dim, dim) storing Christoffel symbols, contravariant index first dimension.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-geodesic-equation-","dir":"Reference","previous_headings":"","what":"Method geodesic_equation()","title":"Abstract Class for Connections — Connection","text":"Computes geodesic ODE associated connection.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$geodesic_equation(state, .time)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"state numeric array shape dim specifying tangent vector manifold position specified .time. .time numeric array shape dim specifying point manifold compute geodesic ODE.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"numeric array shape dim storing value vector field integrated position.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-exp-","dir":"Reference","previous_headings":"","what":"Method exp()","title":"Abstract Class for Connections — Connection","text":"Exponential map associated affine connection.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$exp(tangent_vec, base_point, n_steps = 100, step = \"euler\")"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"tangent_vec numeric array shape dim specifying tangent vector base_point. base_point numeric array shape dim specifying base point manifold. n_steps integer value specifying number discrete time steps take integration. Defaults 100L. step string specifying numerical scheme use integration. Choices euler rk4. Defaults euler.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"Exponential map base_point tangent_vec computed integration geodesic equation (initial value problem), using christoffel symbols.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"numeric array shape dim storing exponential input tangent vector, lies manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-log-","dir":"Reference","previous_headings":"","what":"Method log()","title":"Abstract Class for Connections — Connection","text":"Logarithm map associated affine connection.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$log(   point,   base_point,   n_steps = 100,   step = \"euler\",   max_iter = 25,   verbose = FALSE,   tol = gs$backend$atol )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"point numeric array shape dim specifying point manifold. base_point numeric array shape dim specifying base point manifold. n_steps integer value specifying number discrete time steps take integration. Defaults 100L. step string specifying numerical scheme use integration. Choices euler rk4. Defaults euler. max_iter integer value specifying number iterations. Defaults 25L. verbose boolean specifying whether optimizer display intermediate messages pertaining convergence. Defaults FALSE. tol numeric value specifying absolute tolerance optimization convergence. Defaults gs$backend$atol.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"Solves boundary value problem associated geodesic equation using Christoffel symbols conjugate gradient descent.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"numeric array shape dim storing exponential input tangent vector, lies manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-ladder-parallel-transport-","dir":"Reference","previous_headings":"","what":"Method ladder_parallel_transport()","title":"Abstract Class for Connections — Connection","text":"Approximate parallel transport using pole ladder scheme.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$ladder_parallel_transport(   tangent_vec,   base_point,   direction,   n_rungs = 1,   scheme = \"pole\",   alpha = 1,   ... )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"tangent_vec numeric array shape dim specifying tangent vector base_point. base_point numeric array shape dim specifying base point manifold. direction Tangent vector base point specifying initial speed geodesic along transport. n_rungs scalar integer specifying Number steps ladder. Defaults 1L. scheme string specifying scheme use construction ladder step. Choices either pole schild. Defaults pole. alpha numeric value specifying exponent scaling vector transport. Must greater equal 1 Guigui Pennec (2022)  proved alpha = 2 optimal. Defaults 2. ... Extra arguments passed calls $exp() $log() auxiliary single ladder step functions.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"Approximate parallel transport using either pole ladder Schild's ladder scheme (Lorenzi Pennec 2014) . Pole ladder exact symmetric spaces order two general Schild's ladder first order approximation (Guigui Pennec 2022) . schemes available affine connection manifolds whose exponential logarithm maps implemented. tangent_vec transported along geodesic starting base_point initial tangent vector direction.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Abstract Class for Connections — Connection","text":"Guigui N, Pennec X (2022). “Numerical accuracy ladder schemes parallel transport manifolds.” Foundations Computational Mathematics, 22(3), 757--790. Lorenzi M, Pennec X (2014). “Efficient parallel transport deformations time series images: Schild’s pole ladder.” Journal mathematical imaging vision, 50(1), 5--17.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"named list 3 components: transported_tangent_vector: Approximation parallel transport input tangent vector. trajectory : list length n_steps storing geodesics construction, return_geodesics = TRUE step function. geodesics methods class connection. end_point:","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-curvature-","dir":"Reference","previous_headings":"","what":"Method curvature()","title":"Abstract Class for Connections — Connection","text":"Computes curvature.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$curvature(tangent_vec_a, tangent_vec_b, tangent_vec_c, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"tangent_vec_a Tangent vector base_point. tangent_vec_b Tangent vector base_point. tangent_vec_c Tangent vector base_point. base_point numeric array shape dim specifying base point manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"three vector fields \\(X|_P = \\mathrm{tangent\\_vec\\_a}\\), \\(Y|_P = \\mathrm{tangent\\_vec\\_b}\\), \\(Z|_P =   \\mathrm{tangent\\_vec\\_c}\\) tangent vector specified argument base point \\(P\\), curvature defined $$R(X,Y)Z =   \\nabla_{[X,Y]}Z - \\nabla_X\\nabla_Y Z + \\nabla_Y\\nabla_X Z.$$","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"Tangent vector base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-directional-curvature-","dir":"Reference","previous_headings":"","what":"Method directional_curvature()","title":"Abstract Class for Connections — Connection","text":"Computes directional curvature (tidal force operator).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$directional_curvature(tangent_vec_a, tangent_vec_b, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"tangent_vec_a Tangent vector base_point. tangent_vec_b Tangent vector base_point. base_point numeric array shape dim specifying base point manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-4","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"two vector fields \\(X|_P = \\mathrm{tangent\\_vec\\_a}\\) \\(Y|_P = \\mathrm{tangent\\_vec\\_b}\\) tangent vector specified argument base point \\(P\\), directional curvature, better known relativity tidal force operator, defined $$R_Y(X) = R(Y,X)Y.$$","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"Tangent vector base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-curvature-derivative-","dir":"Reference","previous_headings":"","what":"Method curvature_derivative()","title":"Abstract Class for Connections — Connection","text":"Computes covariant derivative curvature.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$curvature_derivative(   tangent_vec_a,   tangent_vec_b,   tangent_vec_c,   tangent_vec_d,   base_point = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"tangent_vec_a Tangent vector base_point. tangent_vec_b Tangent vector base_point. tangent_vec_c Tangent vector base_point. tangent_vec_d Tangent vector base_point. base_point numeric array shape dim specifying base point manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-5","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"four vector fields \\(H|_P = \\mathrm{tangent\\_vec\\_a}\\), \\(X|_P = \\mathrm{tangent\\_vec\\_b}\\), \\(Y|_P =   \\mathrm{tangent\\_vec\\_c}\\), \\(Z|_P = \\mathrm{tangent\\_vec\\_d}\\) tangent vector value specified argument base point \\(P\\), covariant derivative curvature \\((\\nabla_H R)(X, Y) Z   |_P\\) computed base point \\(P\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"Tangent vector base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-directional-curvature-derivative-","dir":"Reference","previous_headings":"","what":"Method directional_curvature_derivative()","title":"Abstract Class for Connections — Connection","text":"Computes covariant derivative directional curvature.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$directional_curvature_derivative(   tangent_vec_a,   tangent_vec_b,   base_point = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"tangent_vec_a Tangent vector base_point. tangent_vec_b Tangent vector base_point. base_point numeric array shape dim specifying base point manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-6","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"two vector fields \\(X|_P = \\mathrm{tangent\\_vec\\_a}\\), \\(Y|_P = \\mathrm{tangent\\_vec\\_b}\\) tangent vector value specified argument base point \\(P\\), covariant derivative (direction \\(X\\)) \\((\\nabla_X R_Y)(X) |_P =   (\\nabla_X R)(Y, X) Y |_P\\) directional curvature (direction \\(Y\\)) \\(R_Y(X) = R(Y, X) Y\\) quadratic tensor \\(X\\) \\(Y\\) plays important role computation moments empirical Fréchet mean (Pennec 2019) .","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"references-1","dir":"Reference","previous_headings":"","what":"References","title":"Abstract Class for Connections — Connection","text":"Pennec X (2019). “Curvature effects empirical mean Riemannian affine Manifolds: non-asymptotic high concentration expansion small-sample regime.” arXiv preprint arXiv:1906.07418.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"Tangent vector base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-geodesic-","dir":"Reference","previous_headings":"","what":"Method geodesic()","title":"Abstract Class for Connections — Connection","text":"Generates parametrized function geodesic curve.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$geodesic(   initial_point,   end_point = NULL,   initial_tangent_vec = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"initial_point Point manifold specifying initial point geodesic. end_point Point manifold specifying end point geodesic. Defaults NULL, case initial tangent vector must given. initial_tangent_vec Tangent vector base point specifying initial speed geodesics. Defaults NULL, case end point must given logarithm computed.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-7","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"Geodesic curve defined either: initial point initial tangent vector, initial point end point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"function representing time-parametrized geodesic curve. list initial conditions passed, output list contain, time point, list geodesic values initial condition.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-parallel-transport-","dir":"Reference","previous_headings":"","what":"Method parallel_transport()","title":"Abstract Class for Connections — Connection","text":"Computes parallel transport tangent vector.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$parallel_transport(   tangent_vec,   base_point,   direction = NULL,   end_point = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"tangent_vec numeric array shape dim specifying tangent vector base_point. base_point numeric array shape dim specifying base point manifold. direction Tangent vector base point specifying point along parallel transport computed. Defaults NULL. end_point Point manifold specifying point transport . Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-8","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"Closed-form solution parallel transport tangent vector along geodesic two points base_point end_point alternatively defined \\(t \\mapsto   \\exp_\\mathrm{base_point} (t \\mathrm{direction})\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"Tangent vector transported \\(t \\mapsto   \\exp_\\mathrm{base_point} (t \\mathrm{direction})\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-injectivity-radius-","dir":"Reference","previous_headings":"","what":"Method injectivity_radius()","title":"Abstract Class for Connections — Connection","text":"Computes radius injectivity domain.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$injectivity_radius(base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"base_point numeric array shape dim specifying base point manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"details-9","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Connections — Connection","text":"supremum radii r exponential map diffeomorphism open ball radius r centered base point onto image.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Connections — Connection","text":"numeric value representing injectivity radius.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Connections — Connection","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Connections — Connection","text":"","code":"Connection$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Connection.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Connections — Connection","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Level Set Manifolds — LevelSet","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"Class manifolds embedded vector space submersion.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> LevelSet","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"embedding_space object class VectorSpace specifying embedding space. embedding_metric ??? submersion ??? value ??? tangent_submersion ???","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"LevelSet$new() LevelSet$intrinsic_to_extrinsic_coords() LevelSet$extrinsic_to_intrinsic_coords() LevelSet$projection() LevelSet$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"LevelSet class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"","code":"LevelSet$new(   dim,   embedding_space,   submersion,   value,   tangent_submersion,   default_coords_type = \"intrinsic\",   ...,   py_cls = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"dim integer value specifying dimension manifold. embedding_space object class VectorSpace specifying embedding space. submersion ??? value ??? tangent_submersion ??? default_coords_type string specifying coordinate type. Choices extrinsic intrinsic. Defaults intrinsic. ... Extra arguments passed parent class constructors. See Manifold class. py_cls Python object class LevelSet. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"object class LevelSet.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"method-intrinsic-to-extrinsic-coords-","dir":"Reference","previous_headings":"","what":"Method intrinsic_to_extrinsic_coords()","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"Converts intrinsic extrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"","code":"LevelSet$intrinsic_to_extrinsic_coords(point_intrinsic)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"point_intrinsic numeric array shape dim specifying point embedded manifold intrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"numeric array shape dim_embedding representing point embedded manifold extrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"method-extrinsic-to-intrinsic-coords-","dir":"Reference","previous_headings":"","what":"Method extrinsic_to_intrinsic_coords()","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"Converts extrinsic intrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"","code":"LevelSet$extrinsic_to_intrinsic_coords(point_extrinsic)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"point_extrinsic numeric array shape dim_embedding specifying point embedded manifold extrinsic coordinates, .E. coordinates embedding manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"numeric array shape dim representing point embedded manifold intrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"method-projection-","dir":"Reference","previous_headings":"","what":"Method projection()","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"Projects point embedding manifold embedded manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"","code":"LevelSet$projection(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"point numeric array shape dim_embedding specifying point embedding manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"numeric array shape dim_embedding storing projected point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"","code":"LevelSet$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LevelSet.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Level Set Manifolds — LevelSet","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Lie Groups — LieGroup","title":"Abstract Class for Lie Groups — LieGroup","text":"Class Lie groups. class, point_type ('vector' 'matrix') used describe format points Lie group. point_type 'vector', format inputs dimension, dimension dimension Lie group. point_type 'matrix', format inputs c(n, n) n parameter \\(\\mathrm{GL}(n)\\) e.g. amount rows columns matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Lie Groups — LieGroup","text":"Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Lie Groups — LieGroup","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> LieGroup","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Lie Groups — LieGroup","text":"lie_algebra object class MatrixLieAlgebra NULL representing tangent space identity. left_canonical_metric object class InvariantMetric representing left invariant metric corresponds Euclidean inner product identity. right_canonical_metric object class InvariantMetric representing left invariant metric corresponds Euclidean inner product identity. metrics list objects class RiemannianMetric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Lie Groups — LieGroup","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Lie Groups — LieGroup","text":"LieGroup$new() LieGroup$exp() LieGroup$exp_from_identity() LieGroup$exp_not_from_identity() LieGroup$log() LieGroup$log_from_identity() LieGroup$log_not_from_identity() LieGroup$get_identity() LieGroup$lie_bracket() LieGroup$tangent_translation_map() LieGroup$compose() LieGroup$jacobian_translation() LieGroup$inverse() LieGroup$add_metric() LieGroup$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Lie Groups — LieGroup","text":"LieGroup class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$new(dim, shape, lie_algebra = NULL, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"dim integer value specifying dimension manifold. shape integer vector specifying shape one element Lie group. lie_algebra object class MatrixLieAlgebra NULL specifying tangent space identity. ... Extra arguments passed parent class constructors. See Manifold class. py_cls Python object class LieGroup. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"object class LieGroup.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-exp-","dir":"Reference","previous_headings":"","what":"Method exp()","title":"Abstract Class for Lie Groups — LieGroup","text":"Exponentiates left-invariant vector field base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$exp(tangent_vec, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"tangent_vec numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one tangent vectors corresponding base points. base_point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Lie Groups — LieGroup","text":"vector input element Lie algebra, tangent space base_point: \\(g\\) denotes base_point, \\(v\\) tangent vector, \\(V = g^{-1} v\\) associated Lie algebra vector, $$\\exp(v, g) = \\mathrm{mul}(g, \\exp(V))$$. Therefore, Lie exponential obtained base_point NULL, identity.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing group exponential input tangent vector(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$exp(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-exp-from-identity-","dir":"Reference","previous_headings":"","what":"Method exp_from_identity()","title":"Abstract Class for Lie Groups — LieGroup","text":"Compute group exponential tangent vector identity.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$exp_from_identity(tangent_vec)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"tangent_vec numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one tangent vectors corresponding base points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing group exponential input tangent vector(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$exp_from_identity(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-exp-not-from-identity-","dir":"Reference","previous_headings":"","what":"Method exp_not_from_identity()","title":"Abstract Class for Lie Groups — LieGroup","text":"Calculate group exponential base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$exp_not_from_identity(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"tangent_vec numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one tangent vectors corresponding base points. base_point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing group exponential input tangent vector(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$exp_not_from_identity(rep(0, 3), rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-log-","dir":"Reference","previous_headings":"","what":"Method log()","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes left-invariant vector field bringing base_point point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$log(point, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one points manifold. base_point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Lie Groups — LieGroup","text":"output vector tangent space base_point, Lie algebra element base_point identity. Furthermore, denoting point \\(g\\) base_point \\(h\\), output satisfies $$g = \\exp(\\log(g, h), h)$$.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing group logarithm input point(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$log(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-log-from-identity-","dir":"Reference","previous_headings":"","what":"Method log_from_identity()","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes group logarithm point identity.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$log_from_identity(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one points manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing group logarithm input point(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$log_from_identity(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-log-not-from-identity-","dir":"Reference","previous_headings":"","what":"Method log_not_from_identity()","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes group logarithm base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$log_not_from_identity(point, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one points manifold. base_point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing group logarithm input point(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$log_not_from_identity(rep(0, 3), rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-get-identity-","dir":"Reference","previous_headings":"","what":"Method get_identity()","title":"Abstract Class for Lie Groups — LieGroup","text":"Gets identity group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$get_identity()"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\(\\{ \\mathrm{dim}, [n \\times n] \\}\\) storing identity Lie group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$get_identity() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-lie-bracket-","dir":"Reference","previous_headings":"","what":"Method lie_bracket()","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes lie bracket two tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$lie_bracket(tangent_vector_a, tangent_vector_b, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"tangent_vector_a numeric array shape \\([\\dots \\times n   \\times n]\\) specifying one tangent vectors corresponding base points. tangent_vector_b numeric array shape \\([\\dots \\times n   \\times n]\\) specifying one tangent vectors corresponding base points. base_point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Lie Groups — LieGroup","text":"matrix Lie groups tangent vectors \\(\\) \\(B\\) base point \\(P\\), given (translate identity, compute commutator, go back): $$[,B] = A_P^{-1}B -   B_P^{-1}$$.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times n \\times n]\\) storing Lie bracket two input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$lie_bracket(diag(0, 3), diag(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-tangent-translation-map-","dir":"Reference","previous_headings":"","what":"Method tangent_translation_map()","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes push-forward map left/right translation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$tangent_translation_map(   point,   left_or_right = \"left\",   inverse = FALSE )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one points manifold. left_or_right character string specifying whether compute map left right translation. Choices \"left\" \"right. Defaults \"left\". inverse boolean specifying whether inverse Jacobian matrix. set TRUE, push forward translation inverse point returned. Defaults FALSE.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes push-forward map left/right translation point. corresponds tangent map, differential group multiplication point inverse. groups vector representation, implemented identity, can used points inverse = TRUE. method wraps Jacobian translation actually computes matrix representation map.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"function computing tangent map left/right translation point. can applied tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tangent_translation_map(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-compose-","dir":"Reference","previous_headings":"","what":"Method compose()","title":"Abstract Class for Lie Groups — LieGroup","text":"Performs function composition corresponding Lie group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$compose(point_a, point_b)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"point_a numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one left factors product. point_b numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one right factors product.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing product point_a point_b along first dimension.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$compose(rep(0, 3), rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-jacobian-translation-","dir":"Reference","previous_headings":"","what":"Method jacobian_translation()","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes Jacobian left/right translation point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$jacobian_translation(point, left_or_right = \"left\")"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"point numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, [n \\times n] \\}]\\) specifying one points manifold. left_or_right character string specifying whether compute map left right translation. Choices \"left\" \"right. Defaults \"left\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\mathrm{dim} \\times   \\mathrm{dim}]\\) storing Jacobian left/right translation point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$jacobian_translation(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-inverse-","dir":"Reference","previous_headings":"","what":"Method inverse()","title":"Abstract Class for Lie Groups — LieGroup","text":"Computes inverse law Lie group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$inverse(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"point numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n \\times n] \\}]\\) specifying one points inverted.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n   \\times n] \\}]\\) storing inverted points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$inverse(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-add-metric-","dir":"Reference","previous_headings":"","what":"Method add_metric()","title":"Abstract Class for Lie Groups — LieGroup","text":"Adds metric class $metrics attribute.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$add_metric(metric)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"metric object class RiemannianMetric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Lie Groups — LieGroup","text":"class invisibly.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Lie Groups — LieGroup","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"LieGroup$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Lie Groups — LieGroup","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/LieGroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Lie Groups — LieGroup","text":"","code":"## ------------------------------------------------ ## Method `LieGroup$exp` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$exp(rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$exp_from_identity` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$exp_from_identity(rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$exp_not_from_identity` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$exp_not_from_identity(rep(0, 3), rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$log` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$log(rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$log_from_identity` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$log_from_identity(rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$log_not_from_identity` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$log_not_from_identity(rep(0, 3), rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$get_identity` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$get_identity() }  ## ------------------------------------------------ ## Method `LieGroup$lie_bracket` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$lie_bracket(diag(0, 3), diag(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$tangent_translation_map` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tangent_translation_map(rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$compose` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$compose(rep(0, 3), rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$jacobian_translation` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$jacobian_translation(rep(0, 3)) }  ## ------------------------------------------------ ## Method `LieGroup$inverse` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$inverse(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Manifolds — Manifold","title":"Abstract Class for Manifolds — Manifold","text":"R6::R6Class object implementing base Manifold class. words, topological space locally resembles Euclidean space near point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Manifolds — Manifold","text":"Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Abstract Class for Manifolds — Manifold","text":"rgeomstats::PythonClass -> Manifold","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Manifolds — Manifold","text":"dim integer value specifying dimension manifold. shape integer vector specifying shape one element manifold. Defaults NULL. metric RiemannianMetric object specifying metric use manifold. Defaults NULL. default_coords_type string specifying coordinate type. Choices extrensic intrinsic. Dedaults intrinsic. default_point_type string specifying point type. Choices vector matrix. automatically determined depending manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Manifolds — Manifold","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Manifolds — Manifold","text":"Manifold$new() Manifold$belongs() Manifold$is_tangent() Manifold$to_tangent() Manifold$random_point() Manifold$regularize() Manifold$set_metric() Manifold$random_tangent_vec() Manifold$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Manifolds — Manifold","text":"Manifold class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$new(   dim,   shape = NULL,   metric = NULL,   default_coords_type = \"intrinsic\",   py_cls = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"dim integer value specifying dimension manifold. shape integer vector specifying shape one element manifold. Defaults NULL. metric RiemannianMetric object specifying metric use manifold. Defaults NULL. default_coords_type string specifying coordinate type. Choices extrinsic intrinsic. Defaults intrinsic. py_cls Python object class Manifold. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"object class Manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-belongs-","dir":"Reference","previous_headings":"","what":"Method belongs()","title":"Abstract Class for Manifolds — Manifold","text":"Evaluates point belongs manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$belongs(point, atol = gs$backend$atol)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"point numeric array shape \\([\\dots \\times \\{\\mathrm{dim}\\}]\\) specifying one points checked. atol numeric value specifying absolute tolerance checking. Defaults gs$backend$atol.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"boolean value vector storing whether corresponding points belong manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$belongs(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-is-tangent-","dir":"Reference","previous_headings":"","what":"Method is_tangent()","title":"Abstract Class for Manifolds — Manifold","text":"Checks whether vector tangent base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$is_tangent(vector, base_point = NULL, atol = gs$backend$atol)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"vector numeric array shape \\([\\dots \\times [\\mathrm{dim}]]\\) specifying one vectors checked. base_point numeric array shape \\([\\dots \\times   [\\mathrm{dim}]]\\) specifying one base points manifold. Defaults NULL case identity used. atol numeric value specifying absolute tolerance checking. Defaults gs$backend$atol.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"boolean value vector storing whether corresponding points tangent manifold corresponding base points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$is_tangent(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-to-tangent-","dir":"Reference","previous_headings":"","what":"Method to_tangent()","title":"Abstract Class for Manifolds — Manifold","text":"Projects vector tangent space manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$to_tangent(vector, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"vector numeric array shape \\([\\dots \\times   [\\mathrm{dim}]]\\) specifying one vectors project manifold. base_point numeric array shape \\([\\dots \\times   [\\mathrm{dim}]]\\) specifying one base points manifold. Defaults NULL case identity used.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"numeric array shape \\([\\dots \\times \\{\\mathrm{dim}\\}]\\) storing corresponding projections onto manifold corresponding base points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$to_tangent(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-random-point-","dir":"Reference","previous_headings":"","what":"Method random_point()","title":"Abstract Class for Manifolds — Manifold","text":"Samples random points manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$random_point(n_samples = 1, bound = 1)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"n_samples integer value specifying number samples drawn. Defaults 1L. bound numeric value specifying bound interval sample non-compact manifolds. Defaults 1L.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Manifolds — Manifold","text":"manifold compact, uniform distribution used.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"numeric array shape \\([\\dots \\times \\{\\mathrm{dim}\\}]\\) storing sample points manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   # spd3$random_point(10) # TO DO: uncomment when bug fixed in gs }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-regularize-","dir":"Reference","previous_headings":"","what":"Method regularize()","title":"Abstract Class for Manifolds — Manifold","text":"Regularizes point canonical representation manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$regularize(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"point numeric array shape \\([\\dots \\times [\\mathrm{dim}]]\\) specifying one points manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"numeric array shape storing corresponding regularized points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$regularize(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-set-metric-","dir":"Reference","previous_headings":"","what":"Method set_metric()","title":"Abstract Class for Manifolds — Manifold","text":"Sets Riemannian Metric associated manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$set_metric(metric)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"metric object class RiemannianMetric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"Manifold class invisibly.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$metric   spd3$set_metric(SPDMetricBuresWasserstein$new(n = 3))   spd3$metric }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-random-tangent-vec-","dir":"Reference","previous_headings":"","what":"Method random_tangent_vec()","title":"Abstract Class for Manifolds — Manifold","text":"Generates random tangent vector.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$random_tangent_vec(base_point, n_samples = 1)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"base_point numeric array shape \\([\\dots \\times \\{\\mathrm{dim}\\}]\\) specifying one base points manifold. n_samples integer value specifying number samples drawn. Defaults 1L.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Manifolds — Manifold","text":"numeric array shape \\([\\dots \\times \\{\\mathrm{dim}\\}]\\) storing sample vectors tangent manifold corresponding base points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$random_tangent_vec(diag(1, 3), 10) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Manifolds — Manifold","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Manifolds — Manifold","text":"","code":"Manifold$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Manifolds — Manifold","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/Manifold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Manifolds — Manifold","text":"","code":"## ------------------------------------------------ ## Method `Manifold$belongs` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$belongs(diag(1, 3)) }  ## ------------------------------------------------ ## Method `Manifold$is_tangent` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$is_tangent(diag(1, 3)) }  ## ------------------------------------------------ ## Method `Manifold$to_tangent` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$to_tangent(diag(1, 3)) }  ## ------------------------------------------------ ## Method `Manifold$random_point` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   # spd3$random_point(10) # TO DO: uncomment when bug fixed in gs }  ## ------------------------------------------------ ## Method `Manifold$regularize` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   A <- diag(1, 3)   spd3$regularize(diag(1, 3)) }  ## ------------------------------------------------ ## Method `Manifold$set_metric` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$metric   spd3$set_metric(SPDMetricBuresWasserstein$new(n = 3))   spd3$metric }  ## ------------------------------------------------ ## Method `Manifold$random_tangent_vec` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$random_tangent_vec(diag(1, 3), 10) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"two main forms representation elements matrix Lie algebra implemented . first one matrix, elements \\(R^{n \\times n}\\). second choosing basis remembering coefficients element basis. basis provided child classes (e.g. SkewSymmetricMatrices).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"Stefan Heyder","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> rgeomstats::VectorSpace -> MatrixLieAlgebra","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"n integer value representing number rows columns matrix representation Lie algebra.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent() rgeomstats::VectorSpace$projection()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"MatrixLieAlgebra$new() MatrixLieAlgebra$baker_campbell_hausdorff() MatrixLieAlgebra$basis_representation() MatrixLieAlgebra$matrix_representation() MatrixLieAlgebra$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"MatrixLieAlgebra class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"","code":"MatrixLieAlgebra$new(dim, n, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"dim integer value specifying dimension Lie algebra real vector space. n integer value representing number rows columns matrix representation Lie algebra. ... Extra arguments passed parent class constructors. See VectorSpace  Manifold classes. py_cls Python object class MatrixLieAlgebra. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"object class MatrixLieAlgebra.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"method-baker-campbell-hausdorff-","dir":"Reference","previous_headings":"","what":"Method baker_campbell_hausdorff()","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"Calculates Baker-Campbell-Hausdorff approximation given order.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"","code":"MatrixLieAlgebra$baker_campbell_hausdorff(matrix_a, matrix_b, order = 2)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"matrix_a numeric array shape \\(... \\times n \\times n\\) specifying matrix sample matrices. matrix_b numeric array shape \\(... \\times n \\times n\\) specifying matrix sample matrices. order integer value specifying order approximation calculated. Note using \\(e_i\\) \\(< \\mathrm{order}\\). Defaults 2L.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"implementation based Casas Murua (2009)  pre-computed constants taken  () . coefficients truncated enable us calculate BCH order \\(15\\). represents $$Z = \\log \\left( \\exp(X) \\exp(Y) \\right)$$ infinite linear combination form $$Z = \\sum_i z_i e_i$$ \\(z_i\\) rational numbers \\(e_i\\) iterated Lie brackets starting \\(e_1 = X\\), \\(e_2 = Y\\), \\(e_i\\) given \\((^\\prime,^{\\prime\\prime})\\) \\(e_i =   [e_i^\\prime, e_i^{\\prime\\prime}]\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"numeric array shape \\(... \\times n \\times n\\) storing matrix sample matrices corresponding BCH approximation(s) input matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"method-basis-representation-","dir":"Reference","previous_headings":"","what":"Method basis_representation()","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"Computes coefficients matrices given basis.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"","code":"MatrixLieAlgebra$basis_representation(matrix_representation)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"matrix_representation numeric array shape \\(... \\times n   \\times n\\) specifying matrix sample matrices matrix representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"numeric array shape \\(... \\times \\mathrm{dim}\\) storing matrix sample matrices basis representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"method-matrix-representation-","dir":"Reference","previous_headings":"","what":"Method matrix_representation()","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"Compute matrix representation given basis coefficients.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"","code":"MatrixLieAlgebra$matrix_representation(basis_representation)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"basis_representation numeric array shape \\(... \\times   \\mathrm{dim}\\) storing matrix sample matrices basis representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"Sums basis elements according coefficients given basis representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"numeric array shape \\(... \\times n \\times n\\) specifying matrix sample matrices matrix representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"","code":"MatrixLieAlgebra$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieAlgebra.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Algebras — MatrixLieAlgebra","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Class matrix Lie groups.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> MatrixLieGroup","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"lie_algebra object class MatrixLieAlgebra NULL representing tangent space identity. n size \\(n \\times n\\) matrix elements. left_canonical_metric object class InvariantMetric representing left invariant metric corresponds Euclidean inner product identity. right_canonical_metric object class InvariantMetric representing left invariant metric corresponds Euclidean inner product identity.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"MatrixLieGroup$new() MatrixLieGroup$exp() MatrixLieGroup$log() MatrixLieGroup$get_identity() MatrixLieGroup$lie_bracket() MatrixLieGroup$tangent_translation_map() MatrixLieGroup$compose() MatrixLieGroup$inverse() MatrixLieGroup$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"MatrixLieGroup class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$new(dim, n, lie_algebra = NULL, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"dim integer value specifying dimension manifold. n size \\(n \\times n\\) matrix elements. lie_algebra object class MatrixLieAlgebra NULL representing tangent space identity. ... Extra arguments passed parent class constructors. See Manifold class. py_cls Python object class MatrixLieGroup. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"object class MatrixLieGroup.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-exp-","dir":"Reference","previous_headings":"","what":"Method exp()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Exponentiates left-invariant vector field base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$exp(tangent_vec, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"tangent_vec numeric array shape \\([\\dots \\times n \\times   n]\\) specifying one tangent vectors corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"vector input element Lie algebra, tangent space base_point: \\(g\\) denotes base_point, \\(v\\) tangent vector, \\(V = g^{-1} v\\) associated Lie algebra vector, $$\\exp(v, g) = \\mathrm{mul}(g, \\exp(V))$$. Therefore, Lie exponential obtained base_point NULL, identity.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"numeric array shape \\([\\dots \\times n \\times n]\\) storing left multiplication Lie exponential input tangent vectors corresponding base points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   # so3$exp(diag(1, 3)) # TO DO: fix in gs }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-log-","dir":"Reference","previous_headings":"","what":"Method log()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Computes left-invariant vector field bringing base_point point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$log(point, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"output vector tangent space base_point, Lie algebra element base_point identity. Furthermore, denoting point \\(g\\) base_point \\(h\\), output satisfies $$g = \\exp(\\log(g, h), h)$$.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"numeric array shape \\([\\dots \\times n \\times n]\\) Lie exponential corresponding base points matches corresponding points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$log(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-get-identity-","dir":"Reference","previous_headings":"","what":"Method get_identity()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Gets identity group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$get_identity()"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"numeric array shape \\(n \\times n\\) storing identity Lie group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$get_identity() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-lie-bracket-","dir":"Reference","previous_headings":"","what":"Method lie_bracket()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Computes lie bracket two tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$lie_bracket(   tangent_vector_a,   tangent_vector_b,   base_point = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"tangent_vector_a numeric array shape \\([\\dots \\times n   \\times n]\\) specifying one tangent vectors corresponding base points. tangent_vector_b numeric array shape \\([\\dots \\times n   \\times n]\\) specifying one tangent vectors corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one base points manifold. Defaults identity NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"matrix Lie groups tangent vectors \\(\\) \\(B\\) base point \\(P\\), given (translate identity, compute commutator, go back): $$[,B] = A_P^{-1}B -   B_P^{-1}$$.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"numeric array shape \\([\\dots \\times n \\times n]\\) storing Lie bracket two input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$lie_bracket(diag(0, 3), diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-tangent-translation-map-","dir":"Reference","previous_headings":"","what":"Method tangent_translation_map()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Computes push-forward map left/right translation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$tangent_translation_map(   point,   left_or_right = \"left\",   inverse = FALSE )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"point numeric array shape \\([\\dots \\times \\{ \\mathrm{dim},   [n \\times n] \\} ]\\) specifying one points compute map. left_or_right character string specifying whether compute map left right translation. Choices \"left\" \"right. Defaults \"left\". inverse boolean specifying whether inverse Jacobian matrix. set TRUE, push forward translation inverse point returned. Defaults FALSE.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Computes push-forward map left/right translation point. corresponds tangent map, differential group multiplication point inverse. groups vector representation, implemented identity, can used points inverse = TRUE. method wraps Jacobian translation actually computes matrix representation map.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"function taking argument numeric array tangent_vec shape \\([\\dots \\times \\{ \\mathrm{dim}, [n \\times n] \\} ]\\) specifying one tangent vectors returning numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, [n \\times n] \\} ]\\) storing result tangent mapping left/right translation input tangent points corresponding base points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   tangent_map <- so3$tangent_translation_map(diag(1, 3))   tangent_map(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-compose-","dir":"Reference","previous_headings":"","what":"Method compose()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Performs function composition corresponding Lie group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$compose(point_a, point_b)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"point_a numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, n \\times n \\}]\\) specifying one left factors product. point_b numeric array shape \\([\\dots \\times \\{   \\mathrm{dim}, n \\times n \\}]\\) specifying one right factors product.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, n   \\times n \\}]\\) storing product point_a point_b along first dimension.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$compose(diag(1, 3), diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-inverse-","dir":"Reference","previous_headings":"","what":"Method inverse()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"Computes inverse law Lie group.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$inverse(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"point numeric array shape \\([\\dots \\times \\{ \\mathrm{dim}, n \\times n \\}]\\) specifying one points inverted.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"numeric array shape storing inverted points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$inverse(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"MatrixLieGroup$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/MatrixLieGroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Matrix Lie Groups — MatrixLieGroup","text":"","code":"## ------------------------------------------------ ## Method `MatrixLieGroup$exp` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   # so3$exp(diag(1, 3)) # TO DO: fix in gs }  ## ------------------------------------------------ ## Method `MatrixLieGroup$log` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$log(diag(1, 3)) }  ## ------------------------------------------------ ## Method `MatrixLieGroup$get_identity` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$get_identity() }  ## ------------------------------------------------ ## Method `MatrixLieGroup$lie_bracket` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$lie_bracket(diag(0, 3), diag(1, 3)) }  ## ------------------------------------------------ ## Method `MatrixLieGroup$tangent_translation_map` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   tangent_map <- so3$tangent_translation_map(diag(1, 3))   tangent_map(diag(1, 3)) }  ## ------------------------------------------------ ## Method `MatrixLieGroup$compose` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$compose(diag(1, 3), diag(1, 3)) }  ## ------------------------------------------------ ## Method `MatrixLieGroup$inverse` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$inverse(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for N-Fold Product Manifolds — NFoldManifold","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"Class \\(n\\)-fold product manifold \\(M^n\\). defines manifold product manifold \\(n\\) copies given base manifold \\(M\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"Nicolas Guigui","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> NFoldManifold","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"NFoldManifold$new() NFoldManifold$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"NFoldManifold class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"","code":"NFoldManifold$new(   base_manifold,   n_copies,   metric = NULL,   default_coords_type = \"intrinsic\",   py_cls = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"base_manifold R6::R6Class specifying base manifold copy. n_copies integer value specifying number replication base manifold. metric R6::R6Class specifying base metric use. Defaults NULL uses Riemannian metric. default_coords_type string specifying coordinate type. Choices \"intrinsic\" \"extrinsic\". Defaults \"intrinsic\". py_cls Python object class NFoldManifold. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"NFoldManifold R6::R6Class object.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   nfm <- NFoldManifold$new(     base_manifold = SPDMatrix(n = 3),     n_copies = 3   )   nfm }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"","code":"NFoldManifold$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/NFoldManifold.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for N-Fold Product Manifolds — NFoldManifold","text":"","code":"## ------------------------------------------------ ## Method `NFoldManifold$new` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   nfm <- NFoldManifold$new(     base_manifold = SPDMatrix(n = 3),     n_copies = 3   )   nfm }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Open Set Manifolds — OpenSet","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"Class manifolds open sets vector space. case, tangent vectors identified vectors ambient space.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> OpenSet","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"ambient_space object class VectorSpace specifying ambient space.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"OpenSet$new() OpenSet$projection() OpenSet$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"OpenSet class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"","code":"OpenSet$new(dim, ambient_space, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"dim integer value specifying dimension manifold. ambient_space object class VectorSpace specifying ambient space. ... Extra arguments passed parent class constructors. See Manifold class. py_cls Python object class OpenSet. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"object class OpenSet.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"method-projection-","dir":"Reference","previous_headings":"","what":"Method projection()","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"Project point ambient space onto manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"","code":"OpenSet$projection(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"point numeric array shape \\([\\dots \\times   \\{\\mathrm{dim}\\}]\\) specifying one vectors ambient space manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"numeric array shape storing corresponding projections onto manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$projection(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"","code":"OpenSet$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/OpenSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Open Set Manifolds — OpenSet","text":"","code":"## ------------------------------------------------ ## Method `OpenSet$projection` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$projection(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Riemannian Metrics — RiemannianMetric","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"R6::R6Class object implementing base RiemannianMetric class. abstract class Riemannian pseudo-Riemannian metrics associated Levi-Civita connection tangent bundle.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"rgeomstats::PythonClass -> rgeomstats::Connection -> RiemannianMetric","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"signature integer vector specifying signature metric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Connection$christoffels() rgeomstats::Connection$curvature() rgeomstats::Connection$curvature_derivative() rgeomstats::Connection$directional_curvature() rgeomstats::Connection$directional_curvature_derivative() rgeomstats::Connection$exp() rgeomstats::Connection$geodesic() rgeomstats::Connection$geodesic_equation() rgeomstats::Connection$injectivity_radius() rgeomstats::Connection$ladder_parallel_transport() rgeomstats::Connection$log() rgeomstats::Connection$parallel_transport()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"RiemannianMetric$new() RiemannianMetric$metric_matrix() RiemannianMetric$cometric_matrix() RiemannianMetric$inner_product_derivative_matrix() RiemannianMetric$inner_product() RiemannianMetric$inner_coproduct() RiemannianMetric$hamiltonian() RiemannianMetric$squared_norm() RiemannianMetric$norm() RiemannianMetric$normalize() RiemannianMetric$random_unit_tangent_vec() RiemannianMetric$squared_dist() RiemannianMetric$dist() RiemannianMetric$dist_broadcast() RiemannianMetric$dist_pairwise() RiemannianMetric$diameter() RiemannianMetric$closest_neighbor_index() RiemannianMetric$normal_basis() RiemannianMetric$sectional_curvature() RiemannianMetric$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"RiemannianMetric class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$new(   dim,   shape = NULL,   signature = NULL,   default_coords_type = \"intrinsic\",   py_cls = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"dim integer value specifying dimension manifold. shape integer vector specifying shape one element manifold. Defaults NULL. signature integer vector specifying signature metric. Defaults c(dim, 0L). default_coords_type string specifying coordinate type. Choices extrensic intrinsic. Defaults intrinsic. py_cls Python object class RiemannianMetric. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"object class RiemannianMetric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-metric-matrix-","dir":"Reference","previous_headings":"","what":"Method metric_matrix()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Metric matrix tangent space base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$metric_matrix(base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric array shape dim x dim storing inner-product matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$metric_matrix() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-cometric-matrix-","dir":"Reference","previous_headings":"","what":"Method cometric_matrix()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Inner co-product matrix cotangent space base point. represents cometric matrix, .e. inverse metric matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$cometric_matrix(base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric array shape dim x dim storing inverse inner-product matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$cometric_matrix() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-inner-product-derivative-matrix-","dir":"Reference","previous_headings":"","what":"Method inner_product_derivative_matrix()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Compute derivative inner prod matrix base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$inner_product_derivative_matrix(base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric array shape dim x dim storing derivative inverse inner-product matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$inner_product_derivative_matrix() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-inner-product-","dir":"Reference","previous_headings":"","what":"Method inner_product()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Inner product two tangent vectors base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$inner_product(tangent_vec_a, tangent_vec_b, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"tangent_vec_a numeric array shape dim specifying tangent vector base point. tangent_vec_b numeric array shape dim specifying tangent vector base point. base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"scalar value representing inner product two input tangent vectors input base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt$inner_product(diag(0, 3), diag(1, 3), base_point = diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-inner-coproduct-","dir":"Reference","previous_headings":"","what":"Method inner_coproduct()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes inner coproduct two cotangent vectors base point. inner product associated cometric matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$inner_coproduct(   cotangent_vec_a,   cotangent_vec_b,   base_point = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"cotangent_vec_a numeric array shape dim specifying cotangent vector base point. cotangent_vec_b numeric array shape dim specifying cotangent vector base point. base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"scalar value representing inner coproduct two input cotangent vectors input base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$inner_coproduct(diag(0, 3), diag(1, 3), base_point = diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-hamiltonian-","dir":"Reference","previous_headings":"","what":"Method hamiltonian()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes Hamiltonian energy associated cometric. Hamiltonian state \\((q, p)\\) defined $$H(q, p) =   \\frac{1}{2} \\langle p, p \\rangle_q,$$ \\(\\langle \\cdot, \\cdot   \\rangle_q\\) cometric \\(q\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$hamiltonian(state)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"state list two components: () numeric array shape dim specifying position point manifold (ii) numeric array shape dim specifying momentum cotangent vector.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric value representing Hamiltonian energy state.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$hamiltonian() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-squared-norm-","dir":"Reference","previous_headings":"","what":"Method squared_norm()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes square norm vector. Squared norm vector associated inner product tangent space base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$squared_norm(vector, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"vector numeric array shape dim specifying vector. base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric value representing squared norm input vector. (reticulate::py_module_available(\"geomstats\"))  mt <- SPDMetricLogEuclidean$new(n = 3) mt$squared_norm(diag(0, 3), diag(1, 3))","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-norm-","dir":"Reference","previous_headings":"","what":"Method norm()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes norm vector associated inner product tangent space base point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$norm(vector, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"vector numeric array shape dim specifying vector. base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"works positive-definite Riemannian metrics inner products.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric value representing norm input vector. (reticulate::py_module_available(\"geomstats\"))  mt <- SPDMetricLogEuclidean$new(n = 3) mt$norm(diag(0, 3), diag(1, 3))","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-normalize-","dir":"Reference","previous_headings":"","what":"Method normalize()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Normalizes tangent vector given point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$normalize(vector, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"vector numeric array shape dim specifying vector. base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric array shape dim storing normalized version input tangent vector.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$normalize(diag(2, 3), diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-random-unit-tangent-vec-","dir":"Reference","previous_headings":"","what":"Method random_unit_tangent_vec()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Generates random unit tangent vector given point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$random_unit_tangent_vec(base_point = NULL, n_vectors = 1)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"base_point numeric array shape dim specifying point manifold. Defaults NULL. n_vectors integer value specifying number vectors generated base_point. vectorization purposes, n_vectors can greater 1 iff base_point corresponds single point. Defaults 1L.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric array shape c(n_vectors, dim) storing random unit tangent vectors base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$random_unit_tangent_vec(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-squared-dist-","dir":"Reference","previous_headings":"","what":"Method squared_dist()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Squared geodesic distance two points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$squared_dist(point_a, point_b, ...)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"point_a numeric array shape dim manifold. point_b numeric array shape dim manifold. ... Extra parameters passed $log() method parent Connection class.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric value storing squared geodesic distance two input points. (reticulate::py_module_available(\"geomstats\"))  mt <- SPDMetricLogEuclidean$new(n = 3) mt$squared_dist(diag(1, 3), diag(1, 3))","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-dist-","dir":"Reference","previous_headings":"","what":"Method dist()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Geodesic distance two points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$dist(point_a, point_b, ...)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"point_a numeric array shape dim manifold. point_b numeric array shape dim manifold. ... Extra parameters passed $log() method parent Connection class.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"works positive definite Riemannian metrics.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric value storing geodesic distance two input points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt$dist(diag(1, 3), diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-dist-broadcast-","dir":"Reference","previous_headings":"","what":"Method dist_broadcast()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes geodesic distance points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$dist_broadcast(points_a, points_b)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"points_a numeric array shape c(n_samples_a, dim) specifying set points manifold. points_b numeric array shape c(n_samples_b, dim) specifying set points manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"n_samples_a == n_samples_b dist element-wise distance result point points_a point points_b index. n_samples_a != n_samples_b dist result applying geodesic distance point points_a points points_b.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric array shape c(n_samples_a, dim) n_samples_a == n_samples_b shape c(n_samples_a, n_samples_b, dim) n_samples_a != n_samples_b storing geodesic distance points set points set B.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt$dist(diag(1, 3), diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-dist-pairwise-","dir":"Reference","previous_headings":"","what":"Method dist_pairwise()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes pairwise distance points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$dist_pairwise(points, n_jobs = 1, ...)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"points numeric array shape c(n_samples, dim) specifying set points manifold. n_jobs integer value specifying number cores parallel computation. Defaults 1L. ... Extra parameters passed tothe  joblib.Parallel Python class. See joblib documentation details.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric matrix shape c(n_samples, n_samples) storing pairwise geodesic distances points.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-diameter-","dir":"Reference","previous_headings":"","what":"Method diameter()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes diameter set points manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$diameter(points)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"points numeric array shape c(n_samples, dim) specifying set points manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"details-3","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"diameter maximum pairwise distances.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric value representing largest distance two points input set.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-closest-neighbor-index-","dir":"Reference","previous_headings":"","what":"Method closest_neighbor_index()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Finds closest neighbor point among set neighbors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$closest_neighbor_index(point, neighbors)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"point numeric array shape dim specifying point manifold. neighbors numeric array shape c(n_neighbors, dim) specifying set neighboring points input point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"integer value representing index neighbor neighbors closest point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-normal-basis-","dir":"Reference","previous_headings":"","what":"Method normal_basis()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Normalizes basis respect metric. corresponds renormalization basis vector.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$normal_basis(basis, base_point = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"basis numeric array shape c(dim, dim) specifying basis. base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric array shape c(dim, n, n) storing normal basis.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-sectional-curvature-","dir":"Reference","previous_headings":"","what":"Method sectional_curvature()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"Computes sectional curvature.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$sectional_curvature(   tangent_vec_a,   tangent_vec_b,   base_point = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"tangent_vec_a numeric array shape c(n, n) specifying tangent vector base_point. tangent_vec_b numeric array shape c(n, n) specifying tangent vector base_point. base_point numeric array shape dim specifying point manifold. Defaults NULL.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"details-4","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"two orthonormal tangent vectors \\(x\\) \\(y\\) base point, sectional curvature defined $$\\langle R(x,   y)x, y \\rangle = \\langle R_x(y), y \\rangle.$$ non-orthonormal vectors, $$\\langle R(x, y)x, y \\rangle / \\\\|x \\wedge y\\\\|^2.$$ See also https://en.wikipedia.org/wiki/Sectional_curvature.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"numeric value representing sectional curvature base_point.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"RiemannianMetric$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/RiemannianMetric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Riemannian Metrics — RiemannianMetric","text":"","code":"## ------------------------------------------------ ## Method `RiemannianMetric$metric_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$metric_matrix() }  ## ------------------------------------------------ ## Method `RiemannianMetric$cometric_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$cometric_matrix() }  ## ------------------------------------------------ ## Method `RiemannianMetric$inner_product_derivative_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$inner_product_derivative_matrix() }  ## ------------------------------------------------ ## Method `RiemannianMetric$inner_product` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt$inner_product(diag(0, 3), diag(1, 3), base_point = diag(1, 3)) }  ## ------------------------------------------------ ## Method `RiemannianMetric$inner_coproduct` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$inner_coproduct(diag(0, 3), diag(1, 3), base_point = diag(1, 3)) }  ## ------------------------------------------------ ## Method `RiemannianMetric$hamiltonian` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$hamiltonian() }  ## ------------------------------------------------ ## Method `RiemannianMetric$normalize` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$normalize(diag(2, 3), diag(1, 3)) }  ## ------------------------------------------------ ## Method `RiemannianMetric$random_unit_tangent_vec` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   # mt <- SPDMetricLogEuclidean$new(n = 3)   # mt$random_unit_tangent_vec(diag(1, 3)) }  ## ------------------------------------------------ ## Method `RiemannianMetric$dist` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt$dist(diag(1, 3), diag(1, 3)) }  ## ------------------------------------------------ ## Method `RiemannianMetric$dist_broadcast` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt$dist(diag(1, 3), diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Class manifold symmetric positive definite (SPD) matrices.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Yann Thanwerdas","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> rgeomstats::OpenSet -> SPDMatrices","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"n integer value specifying number rows columns matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent() rgeomstats::OpenSet$projection()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPDMatrices$new() SPDMatrices$cholesky_factor() SPDMatrices$differential_cholesky_factor() SPDMatrices$expm() SPDMatrices$differential_exp() SPDMatrices$inverse_differential_exp() SPDMatrices$logm() SPDMatrices$differential_log() SPDMatrices$inverse_differential_log() SPDMatrices$powerm() SPDMatrices$differential_power() SPDMatrices$inverse_differential_power() SPDMatrices$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"SPDMatrices class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$new(n, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"n integer value specifying number rows columns matrices. ... Extra arguments passed parent class constructors. See OpenSet Manifold classes. py_cls Python object class SPDMatrices. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"object class SPDMatrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3 }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-cholesky-factor-","dir":"Reference","previous_headings":"","what":"Method cholesky_factor()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes Cholesky factor symmetric positive definite matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$cholesky_factor(mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape storing corresponding Cholesky factors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$cholesky_factor(A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-cholesky-factor-","dir":"Reference","previous_headings":"","what":"Method differential_cholesky_factor()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential Cholesky factor map.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_cholesky_factor(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices specifying base points input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape \\([\\dots \\times n \\times n]\\) storing differentials corresponding Cholesky factor maps.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_cholesky_factor(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-expm-","dir":"Reference","previous_headings":"","what":"Method expm()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes matrix exponential symmetric matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$expm(mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape storing corresponding matrix exponentials.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$expm(diag(-1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-exp-","dir":"Reference","previous_headings":"","what":"Method differential_exp()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential matrix exponential.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_exp(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices specifying base points input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape \\([\\dots \\times n \\times]\\) storing differentials matrix exponential corresponding base points applied corresponding tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_exp(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-inverse-differential-exp-","dir":"Reference","previous_headings":"","what":"Method inverse_differential_exp()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes inverse differential matrix exponential.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$inverse_differential_exp(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices specifying base points input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape \\([\\dots \\times n \\times]\\) storing inverse differentials matrix exponential corresponding base points applied corresponding tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$inverse_differential_exp(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-logm-","dir":"Reference","previous_headings":"","what":"Method logm()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes matrix logarithm SPD matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$logm(mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape storing logarithms input SPD matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$logm(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-log-","dir":"Reference","previous_headings":"","what":"Method differential_log()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential matrix logarithm.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_log(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices specifying base points input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape \\([\\dots \\times n \\times]\\) storing differentials matrix logarithm corresponding base points applied corresponding tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_log(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-inverse-differential-log-","dir":"Reference","previous_headings":"","what":"Method inverse_differential_log()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes inverse differential matrix logarithm.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$inverse_differential_log(tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"tangent_vec numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices specifying base points input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape \\([\\dots \\times n \\times]\\) storing inverse differentials matrix logarithm corresponding base points applied corresponding tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$inverse_differential_log(diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-powerm-","dir":"Reference","previous_headings":"","what":"Method powerm()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes matrix power SPD matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$powerm(mat, power)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"mat numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices. power numeric value vector specifying desired power(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape mat storing corresponding matrix powers computed : $$^p = \\exp(p \\log()).$$ power vector, list arrays returned.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$powerm(diag(1, 3), 2) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-differential-power-","dir":"Reference","previous_headings":"","what":"Method differential_power()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes differential matrix power function.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$differential_power(power, tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"power integer value specifying desired power. tangent_vec numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices specifying base points input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape \\([\\dots \\times n \\times]\\) storing differential power function $$^p = \\exp(p \\log())$$ corresponding base points applied corresponding tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_power(2, diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-inverse-differential-power-","dir":"Reference","previous_headings":"","what":"Method inverse_differential_power()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"Computes inverse differential matrix power function.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$inverse_differential_power(power, tangent_vec, base_point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"power integer value specifying desired power. tangent_vec numeric array shape \\([\\dots \\times n \\times n]\\) specifying one symmetric matrices corresponding base points. base_point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one SPD matrices specifying base points input tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"numeric array shape \\([\\dots \\times n \\times]\\) storing inverse differential power function $$^p =   \\exp(p \\log())$$ corresponding base points applied corresponding tangent vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$inverse_differential_power(2, diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"SPDMatrices$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrices","text":"","code":"## ------------------------------------------------ ## Method `SPDMatrices$new` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3 }  ## ------------------------------------------------ ## Method `SPDMatrices$cholesky_factor` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$cholesky_factor(A) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_cholesky_factor` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_cholesky_factor(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$expm` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$expm(diag(-1, 3)) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_exp` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_exp(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$inverse_differential_exp` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$inverse_differential_exp(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$logm` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$logm(diag(1, 3)) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_log` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_log(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$inverse_differential_log` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$inverse_differential_log(diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$powerm` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3$powerm(diag(1, 3), 2) }  ## ------------------------------------------------ ## Method `SPDMatrices$differential_power` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$differential_power(2, diag(1, 3), A) }  ## ------------------------------------------------ ## Method `SPDMatrices$inverse_differential_power` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   V <- cbind(     c(sqrt(2) / 2, -sqrt(2) / 2, 0),     c(sqrt(2) / 2, sqrt(2) / 2, 0),     c(0, 0, 1)   )   A <- V %*% diag(1:3) %*% t(V)   spd3$inverse_differential_power(2, diag(1, 3), A) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrix","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrix","text":"function generates instance class manifold symmetric positive definite matrices \\(\\mathrm{SPD}(n)\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrix","text":"","code":"SPDMatrix(n, ...)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrix","text":"n integer value specifying number rows columns matrices. ... Extra arguments passed parent class constructors. See OpenSet Manifold classes.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrix","text":"object class SPDMatrices.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrix.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrix","text":"Yann Thanwerdas","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Manifold of Symmetric Positive Definite Matrices — SPDMatrix","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   spd3 <- SPDMatrix(n = 3)   spd3 }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"R6::R6Class object implementing SPDMetricAffine class. class affine-invariant metric SPD manifold (Thanwerdas Pennec 2019) .","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"Thanwerdas Y, Pennec X (2019). “affine-invariance well defined SPD matrices? principled continuum metrics.” International Conference Geometric Science Information, 502--510. Springer.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"Yann Thanwerdas","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"rgeomstats::PythonClass -> rgeomstats::Connection -> rgeomstats::RiemannianMetric -> SPDMetricAffine","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"n integer value specifying shape matrices: \\(n \\times n\\). power_affine integer value specifying power transformation classical SPD metric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Connection$christoffels() rgeomstats::Connection$curvature() rgeomstats::Connection$curvature_derivative() rgeomstats::Connection$directional_curvature() rgeomstats::Connection$directional_curvature_derivative() rgeomstats::Connection$exp() rgeomstats::Connection$geodesic() rgeomstats::Connection$geodesic_equation() rgeomstats::Connection$injectivity_radius() rgeomstats::Connection$ladder_parallel_transport() rgeomstats::Connection$log() rgeomstats::Connection$parallel_transport() rgeomstats::RiemannianMetric$closest_neighbor_index() rgeomstats::RiemannianMetric$cometric_matrix() rgeomstats::RiemannianMetric$diameter() rgeomstats::RiemannianMetric$dist() rgeomstats::RiemannianMetric$dist_broadcast() rgeomstats::RiemannianMetric$dist_pairwise() rgeomstats::RiemannianMetric$hamiltonian() rgeomstats::RiemannianMetric$inner_coproduct() rgeomstats::RiemannianMetric$inner_product() rgeomstats::RiemannianMetric$inner_product_derivative_matrix() rgeomstats::RiemannianMetric$metric_matrix() rgeomstats::RiemannianMetric$norm() rgeomstats::RiemannianMetric$normal_basis() rgeomstats::RiemannianMetric$normalize() rgeomstats::RiemannianMetric$random_unit_tangent_vec() rgeomstats::RiemannianMetric$sectional_curvature() rgeomstats::RiemannianMetric$squared_dist() rgeomstats::RiemannianMetric$squared_norm()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"SPDMetricAffine$new() SPDMetricAffine$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"SPDMetricAffine class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"","code":"SPDMetricAffine$new(n, power_affine = 1, py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"n integer value specifying shape matrices: \\(n \\times n\\). power_affine integer value specifying power transformation classical SPD metric. Defaults 1L. py_cls Python object class SPDMetricAffine. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"object class SPDMetricAffine.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"","code":"SPDMetricAffine$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricAffine.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Affine Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricAffine","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"R6::R6Class object implementing SPDMetricBuresWasserstein class. class Bures-Wasserstein metric SPD manifold (Bhatia et al. 2019; Malagò et al. 2018) .","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"Bhatia R, Jain T, Lim Y (2019). “Bures--Wasserstein distance positive definite matrices.” Expositiones Mathematicae, 37(2), 165--191. Malagò L, Montrucchio L, Pistone G (2018). “Wasserstein Riemannian geometry Gaussian densities.” Information Geometry, 1(2), 137--179.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"Yann Thanwerdas","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"rgeomstats::PythonClass -> rgeomstats::Connection -> rgeomstats::RiemannianMetric -> SPDMetricBuresWasserstein","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"n integer value specifying shape matrices: \\(n \\times n\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Connection$christoffels() rgeomstats::Connection$curvature() rgeomstats::Connection$curvature_derivative() rgeomstats::Connection$directional_curvature() rgeomstats::Connection$directional_curvature_derivative() rgeomstats::Connection$exp() rgeomstats::Connection$geodesic() rgeomstats::Connection$geodesic_equation() rgeomstats::Connection$injectivity_radius() rgeomstats::Connection$ladder_parallel_transport() rgeomstats::Connection$log() rgeomstats::Connection$parallel_transport() rgeomstats::RiemannianMetric$closest_neighbor_index() rgeomstats::RiemannianMetric$cometric_matrix() rgeomstats::RiemannianMetric$diameter() rgeomstats::RiemannianMetric$dist() rgeomstats::RiemannianMetric$dist_broadcast() rgeomstats::RiemannianMetric$dist_pairwise() rgeomstats::RiemannianMetric$hamiltonian() rgeomstats::RiemannianMetric$inner_coproduct() rgeomstats::RiemannianMetric$inner_product() rgeomstats::RiemannianMetric$inner_product_derivative_matrix() rgeomstats::RiemannianMetric$metric_matrix() rgeomstats::RiemannianMetric$norm() rgeomstats::RiemannianMetric$normal_basis() rgeomstats::RiemannianMetric$normalize() rgeomstats::RiemannianMetric$random_unit_tangent_vec() rgeomstats::RiemannianMetric$sectional_curvature() rgeomstats::RiemannianMetric$squared_dist() rgeomstats::RiemannianMetric$squared_norm()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"SPDMetricBuresWasserstein$new() SPDMetricBuresWasserstein$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"SPDMetricBuresWasserstein class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"","code":"SPDMetricBuresWasserstein$new(n, py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"n integer value specifying shape matrices: \\(n \\times n\\). py_cls Python object class SPDMetricBuresWasserstein. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"object class SPDMetricBuresWasserstein.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"","code":"SPDMetricBuresWasserstein$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricBuresWasserstein.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Bures-Wasserstein Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricBuresWasserstein","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"R6::R6Class object implementing SPDMetricEuclidean class. class Euclidean metric SPD manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"Yann Thanwerdas","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"rgeomstats::PythonClass -> rgeomstats::Connection -> rgeomstats::RiemannianMetric -> SPDMetricEuclidean","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"n integer value specifying shape matrices: \\(n \\times n\\). power_euclidean integer value specifying power transformation classical SPD metric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Connection$christoffels() rgeomstats::Connection$curvature() rgeomstats::Connection$curvature_derivative() rgeomstats::Connection$directional_curvature() rgeomstats::Connection$directional_curvature_derivative() rgeomstats::Connection$exp() rgeomstats::Connection$geodesic() rgeomstats::Connection$geodesic_equation() rgeomstats::Connection$injectivity_radius() rgeomstats::Connection$ladder_parallel_transport() rgeomstats::Connection$log() rgeomstats::Connection$parallel_transport() rgeomstats::RiemannianMetric$closest_neighbor_index() rgeomstats::RiemannianMetric$cometric_matrix() rgeomstats::RiemannianMetric$diameter() rgeomstats::RiemannianMetric$dist() rgeomstats::RiemannianMetric$dist_broadcast() rgeomstats::RiemannianMetric$dist_pairwise() rgeomstats::RiemannianMetric$hamiltonian() rgeomstats::RiemannianMetric$inner_coproduct() rgeomstats::RiemannianMetric$inner_product() rgeomstats::RiemannianMetric$inner_product_derivative_matrix() rgeomstats::RiemannianMetric$metric_matrix() rgeomstats::RiemannianMetric$norm() rgeomstats::RiemannianMetric$normal_basis() rgeomstats::RiemannianMetric$normalize() rgeomstats::RiemannianMetric$random_unit_tangent_vec() rgeomstats::RiemannianMetric$sectional_curvature() rgeomstats::RiemannianMetric$squared_dist() rgeomstats::RiemannianMetric$squared_norm()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"SPDMetricEuclidean$new() SPDMetricEuclidean$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"SPDMetricEuclidean class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"","code":"SPDMetricEuclidean$new(n, power_euclidean = 1, py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"n integer value specifying shape matrices: \\(n \\times n\\). power_euclidean integer value specifying power transformation classical SPD metric. Defaults 1L. py_cls Python object class SPDMetricEuclidean. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"object class SPDMetricEuclidean.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"","code":"SPDMetricEuclidean$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricEuclidean.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Euclidean Metric on the Manifold of Symmetric Positive Definite\nMatrices — SPDMetricEuclidean","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"R6::R6Class object implementing SPDMetricLogEuclidean class. class log-Euclidean metric SPD manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"Yann Thanwerdas","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"rgeomstats::PythonClass -> rgeomstats::Connection -> rgeomstats::RiemannianMetric -> SPDMetricLogEuclidean","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"n integer value specifying shape matrices: \\(n \\times n\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Connection$christoffels() rgeomstats::Connection$curvature() rgeomstats::Connection$curvature_derivative() rgeomstats::Connection$directional_curvature() rgeomstats::Connection$directional_curvature_derivative() rgeomstats::Connection$exp() rgeomstats::Connection$geodesic() rgeomstats::Connection$geodesic_equation() rgeomstats::Connection$injectivity_radius() rgeomstats::Connection$ladder_parallel_transport() rgeomstats::Connection$log() rgeomstats::Connection$parallel_transport() rgeomstats::RiemannianMetric$closest_neighbor_index() rgeomstats::RiemannianMetric$cometric_matrix() rgeomstats::RiemannianMetric$diameter() rgeomstats::RiemannianMetric$dist() rgeomstats::RiemannianMetric$dist_broadcast() rgeomstats::RiemannianMetric$dist_pairwise() rgeomstats::RiemannianMetric$hamiltonian() rgeomstats::RiemannianMetric$inner_coproduct() rgeomstats::RiemannianMetric$inner_product() rgeomstats::RiemannianMetric$inner_product_derivative_matrix() rgeomstats::RiemannianMetric$metric_matrix() rgeomstats::RiemannianMetric$norm() rgeomstats::RiemannianMetric$normal_basis() rgeomstats::RiemannianMetric$normalize() rgeomstats::RiemannianMetric$random_unit_tangent_vec() rgeomstats::RiemannianMetric$sectional_curvature() rgeomstats::RiemannianMetric$squared_dist() rgeomstats::RiemannianMetric$squared_norm()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"SPDMetricLogEuclidean$new() SPDMetricLogEuclidean$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"SPDMetricLogEuclidean class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"","code":"SPDMetricLogEuclidean$new(n, py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"n integer value specifying shape matrices: \\(n \\times n\\). py_cls Python object class SPDMetricLogEuclidean. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"object class SPDMetricLogEuclidean.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"","code":"SPDMetricLogEuclidean$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SPDMetricLogEuclidean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the log-Euclidean Metric on the Manifold of Symmetric Positive\nDefinite Matrices — SPDMetricLogEuclidean","text":"","code":"## ------------------------------------------------ ## Method `SPDMetricLogEuclidean$new` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   mt <- SPDMetricLogEuclidean$new(n = 3)   mt }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal.html","id":null,"dir":"Reference","previous_headings":"","what":"Class for the Special Orthogonal Group — SpecialOrthogonal","title":"Class for the Special Orthogonal Group — SpecialOrthogonal","text":"function generates instance class special orthogonal group \\(\\mathrm{}(n)\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class for the Special Orthogonal Group — SpecialOrthogonal","text":"","code":"SpecialOrthogonal(n, point_type = \"matrix\", epsilon = 0, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class for the Special Orthogonal Group — SpecialOrthogonal","text":"n integer value representing shape n x n matrices. point_type character string specifying elements group represented. Choices either \"vector\" \"matrix\". Defaults \"matrix\". epsilon numeric value specifying precision use calculations involving potential division 0 rotations. Defaults 0.0. ... Extra arguments passed parent class constructors. See LieGroup, MatrixLieAlgebra, LevelSet Manifold classes. py_cls Python object class SpecialOrthogonal. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class for the Special Orthogonal Group — SpecialOrthogonal","text":"object class SpecialOrthogonal instance one three different R6::R6Class depending values input arguments. Specifically: n == 2 point_type == \"vector\", user wants instantiate space 2D rotations vector representations thus output instance SpecialOrthogonal2Vectors class; n == 3 point_type == \"vector\", user wants instantiate space 3D rotations vector representations thus output instance SpecialOrthogonal3Vectors class; cases, either user dealing rotations matrix representation rotations dimension greater 3 thus output instance SpecialOrthogonalMatrices class.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Class for the Special Orthogonal Group — SpecialOrthogonal","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class for the Special Orthogonal Group — SpecialOrthogonal","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3 }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"Class special orthogonal group \\(\\mathrm{}(2)\\) vector form, .e. Lie group planar rotations. class specific vector representation rotations. matrix representation, use SpecialOrthogonal class set n = 2.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> rgeomstats::LieGroup -> rgeomstats::SpecialOrthogonalVectors -> SpecialOrthogonal2Vectors","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent() rgeomstats::LieGroup$add_metric() rgeomstats::LieGroup$compose() rgeomstats::LieGroup$exp() rgeomstats::LieGroup$exp_from_identity() rgeomstats::LieGroup$exp_not_from_identity() rgeomstats::LieGroup$get_identity() rgeomstats::LieGroup$inverse() rgeomstats::LieGroup$jacobian_translation() rgeomstats::LieGroup$lie_bracket() rgeomstats::LieGroup$log() rgeomstats::LieGroup$log_from_identity() rgeomstats::LieGroup$log_not_from_identity() rgeomstats::LieGroup$tangent_translation_map() rgeomstats::SpecialOrthogonalVectors$projection() rgeomstats::SpecialOrthogonalVectors$regularize_tangent_vec() rgeomstats::SpecialOrthogonalVectors$regularize_tangent_vec_at_identity() rgeomstats::SpecialOrthogonalVectors$skew_matrix_from_vector() rgeomstats::SpecialOrthogonalVectors$vector_from_skew_matrix()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"SpecialOrthogonal2Vectors$new() SpecialOrthogonal2Vectors$rotation_vector_from_matrix() SpecialOrthogonal2Vectors$matrix_from_rotation_vector() SpecialOrthogonal2Vectors$random_uniform() SpecialOrthogonal2Vectors$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"SpecialOrthogonal2Vectors class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"SpecialOrthogonal2Vectors$new(epsilon = 0, py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"epsilon numeric value specifying precision use calculations involving potential division 0 rotations. Defaults 0. py_cls Python object class SpecialOrthogonal2Vectors. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"object class SpecialOrthogonal2Vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"method-rotation-vector-from-matrix-","dir":"Reference","previous_headings":"","what":"Method rotation_vector_from_matrix()","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"Converts rotation matrix (2D) rotation vector (axis-angle) getting angle atan2() function.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"SpecialOrthogonal2Vectors$rotation_vector_from_matrix(rot_mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"rot_mat numeric array shape \\([\\dots \\times 2 \\times 2]\\) specifying one 2D rotation matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"numeric array shape \\([\\dots \\times 1]\\) storing corresponding axis-angle representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$rotation_vector_from_matrix(diag(1, 2)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"method-matrix-from-rotation-vector-","dir":"Reference","previous_headings":"","what":"Method matrix_from_rotation_vector()","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"Convert 2D rotation vector matrix representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"SpecialOrthogonal2Vectors$matrix_from_rotation_vector(rot_vec)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"rot_vec numeric array shape \\(... \\times 1\\) specifying one 2D rotations vector representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"numeric array shape \\(... \\times 2 \\times 2\\) storing corresponding 2D rotation matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$matrix_from_rotation_vector(array(0)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"method-random-uniform-","dir":"Reference","previous_headings":"","what":"Method random_uniform()","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"Samples \\(\\mathrm{}(2)\\) uniform distribution.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"SpecialOrthogonal2Vectors$random_uniform(n_samples = 1)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"n_samples integer value specifying sample size. Defaults 1L.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"numeric array shape \\(... \\times 1\\) storing sample 2D rotations axis-angle representation uniformly sampled \\(\\mathrm{}(2)\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"SpecialOrthogonal2Vectors$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal2Vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 2D Special Orthogonal Group in Vector Representation — SpecialOrthogonal2Vectors","text":"","code":"## ------------------------------------------------ ## Method `SpecialOrthogonal2Vectors$rotation_vector_from_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$rotation_vector_from_matrix(diag(1, 2)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal2Vectors$matrix_from_rotation_vector` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$matrix_from_rotation_vector(array(0)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Class special orthogonal group \\(\\mathrm{}(3)\\) vector form, .e. Lie group 3D rotations. class specific vector representation rotations. matrix representation, use SpecialOrthogonal class set n = 3.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> rgeomstats::LieGroup -> rgeomstats::SpecialOrthogonalVectors -> SpecialOrthogonal3Vectors","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"bi_invariant_metric object class BiInvariantMetric specifying metric equip manifold .","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent() rgeomstats::LieGroup$add_metric() rgeomstats::LieGroup$compose() rgeomstats::LieGroup$exp() rgeomstats::LieGroup$exp_from_identity() rgeomstats::LieGroup$exp_not_from_identity() rgeomstats::LieGroup$get_identity() rgeomstats::LieGroup$inverse() rgeomstats::LieGroup$jacobian_translation() rgeomstats::LieGroup$lie_bracket() rgeomstats::LieGroup$log() rgeomstats::LieGroup$log_from_identity() rgeomstats::LieGroup$log_not_from_identity() rgeomstats::LieGroup$tangent_translation_map() rgeomstats::SpecialOrthogonalVectors$projection() rgeomstats::SpecialOrthogonalVectors$regularize_tangent_vec() rgeomstats::SpecialOrthogonalVectors$regularize_tangent_vec_at_identity() rgeomstats::SpecialOrthogonalVectors$skew_matrix_from_vector() rgeomstats::SpecialOrthogonalVectors$vector_from_skew_matrix()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"SpecialOrthogonal3Vectors$new() SpecialOrthogonal3Vectors$rotation_vector_from_matrix() SpecialOrthogonal3Vectors$matrix_from_rotation_vector() SpecialOrthogonal3Vectors$quaternion_from_matrix() SpecialOrthogonal3Vectors$quaternion_from_rotation_vector() SpecialOrthogonal3Vectors$rotation_vector_from_quaternion() SpecialOrthogonal3Vectors$matrix_from_quaternion() SpecialOrthogonal3Vectors$matrix_from_tait_bryan_angles() SpecialOrthogonal3Vectors$tait_bryan_angles_from_matrix() SpecialOrthogonal3Vectors$quaternion_from_tait_bryan_angles() SpecialOrthogonal3Vectors$rotation_vector_from_tait_bryan_angles() SpecialOrthogonal3Vectors$tait_bryan_angles_from_quaternion() SpecialOrthogonal3Vectors$tait_bryan_angles_from_rotation_vector() SpecialOrthogonal3Vectors$random_uniform() SpecialOrthogonal3Vectors$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"SpecialOrthogonal3Vectors class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$new(epsilon = 0, py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"epsilon numeric value specifying precision use calculations involving potential division 0 rotations. Defaults 0. py_cls Python object class SpecialOrthogonal3Vectors. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"object class SpecialOrthogonal3Vectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-rotation-vector-from-matrix-","dir":"Reference","previous_headings":"","what":"Method rotation_vector_from_matrix()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation matrix axis-angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$rotation_vector_from_matrix(rot_mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rot_mat numeric array shape \\([\\dots \\times 3 \\times 3]\\) specifying one 3D rotation matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Gets angle \\(\\theta\\) trace rotation matrix. eigenvalues : $$\\{ 1, \\cos \\theta + \\sin \\theta,   \\cos \\theta - \\sin \\theta \\}$$ $$\\mathrm{trace} = 1 + 2   \\cos \\theta, \\{ -1 \\leq \\mathrm{trace} \\leq 3 \\}.$$ rotation vector vector associated skew-symmetric matrix $$S_r = \\frac{\\theta}{(2 \\sin \\theta) (R - R^T)}.$$ edge case angle close \\(\\pi\\), rotation vector (sign) derived using following equality (see axis-angle representation Wikipedia): $$\\mathrm{outer}(r, r) = \\frac{1}{2} (R + I_3).$$ nD, rotation vector stores \\(n(n-1)/2\\) values skew-symmetric matrix representing rotation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3]\\) storing corresponding axis-angle representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$rotation_vector_from_matrix(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-matrix-from-rotation-vector-","dir":"Reference","previous_headings":"","what":"Method matrix_from_rotation_vector()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation axis-angle matrix representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$matrix_from_rotation_vector(rot_vec)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rot_vec numeric array shape \\([\\dots \\times 3]\\) specifying one 3D rotations axis-angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3 \\times 3]\\) storing corresponding matrix representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$matrix_from_rotation_vector(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-quaternion-from-matrix-","dir":"Reference","previous_headings":"","what":"Method quaternion_from_matrix()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation matrix unit quaternion representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$quaternion_from_matrix(rot_mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rot_mat numeric array shape \\([\\dots \\times 3 \\times 3]\\) specifying one 3D rotations matrix representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 4]\\) storing corresponding unit quaternion representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$quaternion_from_matrix(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-quaternion-from-rotation-vector-","dir":"Reference","previous_headings":"","what":"Method quaternion_from_rotation_vector()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation axis-angle unit quaternion representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$quaternion_from_rotation_vector(rot_vec)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rot_vec numeric array shape \\([\\dots \\times 3]\\) specifying one 3D rotations axis-angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 4]\\) storing corresponding unit quaternion representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$quaternion_from_rotation_vector(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-rotation-vector-from-quaternion-","dir":"Reference","previous_headings":"","what":"Method rotation_vector_from_quaternion()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation unit quaternion axis-angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$rotation_vector_from_quaternion(quaternion)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"quaternion numeric array shape \\([\\dots \\times 4]\\) specifying one 3D rotations unit quaternion representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3]\\) storing corresponding axis-angle representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$rotation_vector_from_quaternion(array(c(1, rep(0, 3)))) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-matrix-from-quaternion-","dir":"Reference","previous_headings":"","what":"Method matrix_from_quaternion()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation unit quaternion matrix representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$matrix_from_quaternion(quaternion)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"quaternion numeric array shape \\([\\dots \\times 4]\\) specifying one 3D rotations unit quaternion representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3 \\times 3]\\) storing corresponding matrix representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$matrix_from_quaternion(c(1, rep(0, 3))) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-matrix-from-tait-bryan-angles-","dir":"Reference","previous_headings":"","what":"Method matrix_from_tait_bryan_angles()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation Tait-Bryan angle matrix representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$matrix_from_tait_bryan_angles(   tait_bryan_angles,   extrinsic_or_intrinsic = \"extrinsic\",   order = \"zyx\" )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"tait_bryan_angles numeric array shape \\([\\dots \\times 3]\\) specifying one 3D rotations Tait-Bryan angle representation. extrinsic_or_intrinsic character string specifying coordinate frame Tait-Bryan angles expressed. Choices either \"extrinsic\" (fixed frame) \"intrinsic\" (moving frame). Defaults \"extrinsic\". order character string specifying order rotation composition around three axes chosen coordinate frame. Choices either \"xyz\" \"zyx\". Defaults \"zyx\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"details-1","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts rotation given terms Tait-Bryan angles [angle_1, angle_2, angle_3] extrinsic (fixed) intrinsic (moving) coordinate frame corresponding matrix representation. order zyx, rotation matrix rot_mat = X(angle_1) Y(angle_2) Z(angle_3) : X(angle_1) rotation angle angle_1 around axis x; Y(angle_2) rotation angle angle_2 around axis y; Z(angle_3) rotation angle angle_3 around axis z. Exchanging 'extrinsic' 'intrinsic' amounts exchanging order.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3 \\times 3]\\) storing corresponding matrix representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$matrix_from_tait_bryan_angles(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-tait-bryan-angles-from-matrix-","dir":"Reference","previous_headings":"","what":"Method tait_bryan_angles_from_matrix()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation matrix Tait-Bryan angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$tait_bryan_angles_from_matrix(   rot_mat,   extrinsic_or_intrinsic = \"extrinsic\",   order = \"zyx\" )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rot_mat numeric array shape \\([\\dots \\times 3 \\times 3]\\) specifying one 3D rotations matrix representation. extrinsic_or_intrinsic character string specifying coordinate frame Tait-Bryan angles expressed. Choices either \"extrinsic\" (fixed frame) \"intrinsic\" (moving frame). Defaults \"extrinsic\". order character string specifying order rotation composition around three axes chosen coordinate frame. Choices either \"xyz\" \"zyx\". Defaults \"zyx\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"details-2","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts rotation given matrix representation Tait-Bryan angle representation [angle_1, angle_2, angle_3] extrinsic (fixed) intrinsic (moving) coordinate frame corresponding matrix representation. order zyx, rotation matrix rot_mat = X(angle_1) Y(angle_2) Z(angle_3) : X(angle_1) rotation angle angle_1 around axis x; Y(angle_2) rotation angle angle_2 around axis y; Z(angle_3) rotation angle angle_3 around axis z. Exchanging 'extrinsic' 'intrinsic' amounts exchanging order.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3]\\) storing corresponding Tait-Bryan angle representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-7","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tait_bryan_angles_from_matrix(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-quaternion-from-tait-bryan-angles-","dir":"Reference","previous_headings":"","what":"Method quaternion_from_tait_bryan_angles()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation Tait-Bryan angle unit quaternion representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$quaternion_from_tait_bryan_angles(   tait_bryan_angles,   extrinsic_or_intrinsic = \"extrinsic\",   order = \"zyx\" )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"tait_bryan_angles numeric array shape \\([\\dots \\times 3]\\) specifying one 3D rotations Tait-Bryan angle representation. extrinsic_or_intrinsic character string specifying coordinate frame Tait-Bryan angles expressed. Choices either \"extrinsic\" (fixed frame) \"intrinsic\" (moving frame). Defaults \"extrinsic\". order character string specifying order rotation composition around three axes chosen coordinate frame. Choices either \"xyz\" \"zyx\". Defaults \"zyx\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 4]\\) storing corresponding unit quaternion representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-8","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$quaternion_from_tait_bryan_angles(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-rotation-vector-from-tait-bryan-angles-","dir":"Reference","previous_headings":"","what":"Method rotation_vector_from_tait_bryan_angles()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation Tait-Bryan angle axis-angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$rotation_vector_from_tait_bryan_angles(   tait_bryan_angles,   extrinsic_or_intrinsic = \"extrinsic\",   order = \"zyx\" )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"tait_bryan_angles numeric array shape \\([\\dots \\times 3]\\) specifying one 3D rotations Tait-Bryan angle representation. extrinsic_or_intrinsic character string specifying coordinate frame Tait-Bryan angles expressed. Choices either \"extrinsic\" (fixed frame) \"intrinsic\" (moving frame). Defaults \"extrinsic\". order character string specifying order rotation composition around three axes chosen coordinate frame. Choices either \"xyz\" \"zyx\". Defaults \"zyx\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3]\\) storing corresponding axis-angle representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-9","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$rotation_vector_from_tait_bryan_angles(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-tait-bryan-angles-from-quaternion-","dir":"Reference","previous_headings":"","what":"Method tait_bryan_angles_from_quaternion()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation matrix Tait-Bryan angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$tait_bryan_angles_from_quaternion(   quaternion,   extrinsic_or_intrinsic = \"extrinsic\",   order = \"zyx\" )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"quaternion numeric array shape \\([\\dots \\times 4]\\) specifying one 3D rotations unit quaternion representation. extrinsic_or_intrinsic character string specifying coordinate frame Tait-Bryan angles expressed. Choices either \"extrinsic\" (fixed frame) \"intrinsic\" (moving frame). Defaults \"extrinsic\". order character string specifying order rotation composition around three axes chosen coordinate frame. Choices either \"xyz\" \"zyx\". Defaults \"zyx\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3]\\) storing corresponding Tait-Bryan angle representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-10","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tait_bryan_angles_from_quaternion(c(1, rep(0, 3))) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-tait-bryan-angles-from-rotation-vector-","dir":"Reference","previous_headings":"","what":"Method tait_bryan_angles_from_rotation_vector()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Converts 3D rotation axis-angle Tait-Bryan angle representation.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$tait_bryan_angles_from_rotation_vector(   rot_vec,   extrinsic_or_intrinsic = \"extrinsic\",   order = \"zyx\" )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"rot_vec numeric array shape \\([\\dots \\times 3]\\) specifying one 3D rotations axis-angle representation. extrinsic_or_intrinsic character string specifying coordinate frame Tait-Bryan angles expressed. Choices either \"extrinsic\" (fixed frame) \"intrinsic\" (moving frame). Defaults \"extrinsic\". order character string specifying order rotation composition around three axes chosen coordinate frame. Choices either \"xyz\" \"zyx\". Defaults \"zyx\".","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3]\\) storing corresponding Tait-Bryan angle representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-11","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tait_bryan_angles_from_rotation_vector(rep(0, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-random-uniform-","dir":"Reference","previous_headings":"","what":"Method random_uniform()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"Samples \\(\\mathrm{}(3)\\) uniform distribution.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$random_uniform(n_samples = 1)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"n_samples integer value specifying sample size. Defaults 1L.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"numeric array shape \\([\\dots \\times 3]\\) storing sample 3D rotations axis-angle representation uniformly sampled \\(\\mathrm{}(3)\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"examples-12","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$random_uniform() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"SpecialOrthogonal3Vectors$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonal3Vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for the 3D Special Orthogonal Group in Vector Representation — SpecialOrthogonal3Vectors","text":"","code":"## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$rotation_vector_from_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$rotation_vector_from_matrix(diag(1, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$matrix_from_rotation_vector` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$matrix_from_rotation_vector(rep(0, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$quaternion_from_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$quaternion_from_matrix(diag(1, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$quaternion_from_rotation_vector` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$quaternion_from_rotation_vector(rep(0, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$rotation_vector_from_quaternion` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$rotation_vector_from_quaternion(array(c(1, rep(0, 3)))) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$matrix_from_quaternion` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$matrix_from_quaternion(c(1, rep(0, 3))) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$matrix_from_tait_bryan_angles` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$matrix_from_tait_bryan_angles(rep(0, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$tait_bryan_angles_from_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tait_bryan_angles_from_matrix(diag(1, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$quaternion_from_tait_bryan_angles` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$quaternion_from_tait_bryan_angles(rep(0, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$rotation_vector_from_tait_bryan_angles` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$rotation_vector_from_tait_bryan_angles(rep(0, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$tait_bryan_angles_from_quaternion` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tait_bryan_angles_from_quaternion(c(1, rep(0, 3))) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$tait_bryan_angles_from_rotation_vector` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$tait_bryan_angles_from_rotation_vector(rep(0, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonal3Vectors$random_uniform` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3, point_type = \"vector\")   so3$random_uniform() }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"Class special orthogonal groups matrix representation.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> rgeomstats::MatrixLieGroup -> SpecialOrthogonalMatrices","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"bi_invariant_metric object class BiInvariantMetric specifying metric equip manifold .","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent() rgeomstats::MatrixLieGroup$compose() rgeomstats::MatrixLieGroup$exp() rgeomstats::MatrixLieGroup$get_identity() rgeomstats::MatrixLieGroup$inverse() rgeomstats::MatrixLieGroup$lie_bracket() rgeomstats::MatrixLieGroup$log() rgeomstats::MatrixLieGroup$tangent_translation_map()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"SpecialOrthogonalMatrices$new() SpecialOrthogonalMatrices$belongs() SpecialOrthogonalMatrices$intrinsic_to_extrinsic_coords() SpecialOrthogonalMatrices$extrinsic_to_intrinsic_coords() SpecialOrthogonalMatrices$projection() SpecialOrthogonalMatrices$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"SpecialOrthogonalMatrices class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"SpecialOrthogonalMatrices$new(n, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"n integer value specifying number rows columns matrices. ... Extra arguments passed parent class constructors. See MatrixLieAlgebra, LevelSet Manifold classes. py_cls Python object class SpecialOrthogonalMatrices. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"object class SpecialOrthogonalMatrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"method-belongs-","dir":"Reference","previous_headings":"","what":"Method belongs()","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"Evaluates point belongs manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"SpecialOrthogonalMatrices$belongs(point, atol = gs$backend$atol)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"point numeric array shape \\([\\dots \\times \\{\\mathrm{dim}\\}]\\) specifying one points checked. atol numeric value specifying absolute tolerance checking. Defaults gs$backend$atol.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"boolean value vector storing whether input points belong manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$belongs(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"method-intrinsic-to-extrinsic-coords-","dir":"Reference","previous_headings":"","what":"Method intrinsic_to_extrinsic_coords()","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"Converts intrinsic extrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"SpecialOrthogonalMatrices$intrinsic_to_extrinsic_coords(point_intrinsic)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"point_intrinsic numeric array shape \\([\\dots \\times \\{   \\mathrm{dim} \\}]\\) specifying one points embedded manifold intrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"numeric array shape \\([\\dots \\times \\{   \\mathrm{dim_embedding} \\}]\\) storing points embedded manifold extrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"method-extrinsic-to-intrinsic-coords-","dir":"Reference","previous_headings":"","what":"Method extrinsic_to_intrinsic_coords()","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"Converts extrinsic intrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"SpecialOrthogonalMatrices$extrinsic_to_intrinsic_coords(point_extrinsic)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"point_extrinsic numeric array shape \\([\\dots \\times \\{   \\mathrm{dim_embedding} \\}]\\) specifying one points embedded manifold extrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"numeric array shape \\([\\dots \\times \\{ \\mathrm{dim} \\}]\\) storing points embedded manifold intrinsic coordinates.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"method-projection-","dir":"Reference","previous_headings":"","what":"Method projection()","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"Project matrix \\(\\mathrm{}(n)\\) minimizing Frobenius norm.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"SpecialOrthogonalMatrices$projection(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"numeric array shape storing projected matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(3)   so3$projection(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"SpecialOrthogonalMatrices$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalMatrices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Matrix Representation — SpecialOrthogonalMatrices","text":"","code":"## ------------------------------------------------ ## Method `SpecialOrthogonalMatrices$belongs` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(n = 3)   so3$belongs(diag(1, 3)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonalMatrices$projection` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so3 <- SpecialOrthogonal(3)   so3$projection(diag(1, 3)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"Class special orthogonal groups \\(\\mathrm{}(\\{2,3\\})\\) vector form, .e. Lie groups planar 3D rotations. class specific vector representation rotations. matrix representation, use SpecialOrthogonal class set n = 2 n = 3.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> rgeomstats::LieGroup -> SpecialOrthogonalVectors","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"n integer value specifying number rows columns matrices. epsilon numeric value specifying precision use calculations involving potential divison 0 rotations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent() rgeomstats::LieGroup$add_metric() rgeomstats::LieGroup$compose() rgeomstats::LieGroup$exp() rgeomstats::LieGroup$exp_from_identity() rgeomstats::LieGroup$exp_not_from_identity() rgeomstats::LieGroup$get_identity() rgeomstats::LieGroup$inverse() rgeomstats::LieGroup$jacobian_translation() rgeomstats::LieGroup$lie_bracket() rgeomstats::LieGroup$log() rgeomstats::LieGroup$log_from_identity() rgeomstats::LieGroup$log_not_from_identity() rgeomstats::LieGroup$tangent_translation_map()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"SpecialOrthogonalVectors$new() SpecialOrthogonalVectors$projection() SpecialOrthogonalVectors$skew_matrix_from_vector() SpecialOrthogonalVectors$vector_from_skew_matrix() SpecialOrthogonalVectors$regularize_tangent_vec_at_identity() SpecialOrthogonalVectors$regularize_tangent_vec() SpecialOrthogonalVectors$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"SpecialOrthogonalVectors class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"SpecialOrthogonalVectors$new(n, epsilon = 0, py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"n integer value specifying number rows columns matrices. epsilon numeric value specifying precision use calculations involving potential divison 0 rotations. Defaults 0. py_cls Python object class SpecialOrthogonalVectors. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"object class SpecialOrthogonalVectors.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"method-projection-","dir":"Reference","previous_headings":"","what":"Method projection()","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"Projects matrix \\(\\mathrm{}(2)\\) \\(\\mathrm{}(3)\\) using Frobenius norm.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"SpecialOrthogonalVectors$projection(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"point numeric array shape \\([\\dots \\times n \\times n]\\) specifying one matrices projected.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"numeric array shape input point storing projected matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$projection(diag(1, 2)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"method-skew-matrix-from-vector-","dir":"Reference","previous_headings":"","what":"Method skew_matrix_from_vector()","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"Gets skew-symmetric matrix derived vector. 3D, computes skew-symmetric matrix, known cross-product vector, associated vector vec.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"SpecialOrthogonalVectors$skew_matrix_from_vector(vec)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"vec numeric array shape \\([\\dots \\times \\mathrm{dim}]\\) specifying one vectors compute corresponding skew matrix representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"numeric array shape \\([\\dots \\times n \\times n]\\) storing corresponding skew matrix representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$skew_matrix_from_vector(array(0)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"method-vector-from-skew-matrix-","dir":"Reference","previous_headings":"","what":"Method vector_from_skew_matrix()","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"Derives vector skew-symmetric matrix. 3D, computes vector defining cross-product associated skew-symmetric matrix.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"SpecialOrthogonalVectors$vector_from_skew_matrix(skew_mat)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"skew_mat numeric array shape \\([\\dots \\times n \\times n]\\) specifying skew matrices.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"numeric array shape \\([\\dots \\times \\mathrm{dim}]\\) storing corresponding vector representations.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$vector_from_skew_matrix(diag(0, 2)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"method-regularize-tangent-vec-at-identity-","dir":"Reference","previous_headings":"","what":"Method regularize_tangent_vec_at_identity()","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"Regularizes tangent vector identity. 2D, regularizes tangent vector getting norm identity less \\(\\pi\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"SpecialOrthogonalVectors$regularize_tangent_vec_at_identity(   tangent_vec,   metric = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"tangent_vec numeric array shape \\([\\dots \\times 1]\\) specifying one tangent vectors base point. metric object class RiemannianMetric specifying metric compute norm tangent vector NULL. set NULL, defaults using Euclidean metric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"numeric array shape \\([\\dots \\times 1]\\) storing regularized tangent vector(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$regularize_tangent_vec_at_identity(array(0)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"method-regularize-tangent-vec-","dir":"Reference","previous_headings":"","what":"Method regularize_tangent_vec()","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"Regularizes tangent vector base point. 2D, regularizes tangent vector getting norm parallel transport identity, determined metric, less \\(\\pi\\).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"SpecialOrthogonalVectors$regularize_tangent_vec(   tangent_vec,   base_point,   metric = NULL )"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"tangent_vec numeric array shape \\([\\dots \\times 1]\\) specifying one tangent vectors corresponding base points. base_point numeric array shape \\([\\dots \\times 1]\\) specifying one points manifold. metric object class RiemannianMetric specifying metric compute norm tangent vector NULL. set NULL, defaults using Euclidean metric.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"numeric array shape \\([\\dots \\times 1]\\) storing regularized tangent vector(s).","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$regularize_tangent_vec(array(0), array(1)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"SpecialOrthogonalVectors$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/SpecialOrthogonalVectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abstract Class for Special Orthogonal Groups in Vector Representation — SpecialOrthogonalVectors","text":"","code":"## ------------------------------------------------ ## Method `SpecialOrthogonalVectors$projection` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$projection(diag(1, 2)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonalVectors$skew_matrix_from_vector` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$skew_matrix_from_vector(array(0)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonalVectors$vector_from_skew_matrix` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$vector_from_skew_matrix(diag(0, 2)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonalVectors$regularize_tangent_vec_at_identity` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$regularize_tangent_vec_at_identity(array(0)) }  ## ------------------------------------------------ ## Method `SpecialOrthogonalVectors$regularize_tangent_vec` ## ------------------------------------------------  if (reticulate::py_module_available(\"geomstats\")) {   so2 <- SpecialOrthogonal(n = 2, point_type = \"vector\")   so2$regularize_tangent_vec(array(0), array(1)) }"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":null,"dir":"Reference","previous_headings":"","what":"Abstract Class for Vector Space Manifolds — VectorSpace","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"Abstract class vector spaces.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"Nicolas Guigui Nina Miolane","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"super-classes","dir":"Reference","previous_headings":"","what":"Super classes","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"rgeomstats::PythonClass -> rgeomstats::Manifold -> VectorSpace","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"basis Basis vector space.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"rgeomstats::PythonClass$get_python_class() rgeomstats::PythonClass$set_python_class() rgeomstats::Manifold$belongs() rgeomstats::Manifold$is_tangent() rgeomstats::Manifold$random_point() rgeomstats::Manifold$random_tangent_vec() rgeomstats::Manifold$regularize() rgeomstats::Manifold$set_metric() rgeomstats::Manifold$to_tangent()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"VectorSpace$new() VectorSpace$projection() VectorSpace$clone()","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"VectorSpace class constructor.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"","code":"VectorSpace$new(shape, ..., py_cls = NULL)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"shape integer vector specifying shape one element manifold. Defaults NULL. ... Extra arguments passed parent class constructors. See Manifold class. py_cls Python object class VectorSpace. Defaults NULL case instantiated fly using input arguments.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"object class VectorSpace.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"method-projection-","dir":"Reference","previous_headings":"","what":"Method projection()","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"Project point onto vector space.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"","code":"VectorSpace$projection(point)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"point numeric array shape dim specifying vector ambient space onto manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"method compatibility returns point. point right shape.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"numeric array shape dim storing input vector projected onto manifold.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"objects class cloneable method.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"","code":"VectorSpace$clone(deep = FALSE)"},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/VectorSpace.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abstract Class for Vector Space Manifolds — VectorSpace","text":"deep Whether make deep clone.","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/rgeomstats-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rgeomstats: An R Interface to Geomstats — rgeomstats-package","title":"rgeomstats: An R Interface to Geomstats — rgeomstats-package","text":"Provides R interface Python package Geomstats.","code":""},{"path":[]},{"path":"https://lmjl-alea.github.io/rgeomstats/reference/rgeomstats-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rgeomstats: An R Interface to Geomstats — rgeomstats-package","text":"Maintainer: Aymeric Stamm aymeric.stamm@math.cnrs.fr (ORCID) contributors: Nicolas Guigui (ORCID) (Author Geomstats Python package) [contributor] Alice Le Brigant (ORCID) (Author Geomstats Python package) [contributor] Johan Mathe (Author Geomstats Python package) [contributor] Nina Miolane (ORCID) (Author Geomstats Python package) [contributor] Xavier Pennec (ORCID) (Author Geomstats Python package) [contributor] Luis Pereira (Author Geomstats Python package) [contributor] Yann Thanwerdas (ORCID) (Author Geomstats Python package) [contributor]","code":""},{"path":"https://lmjl-alea.github.io/rgeomstats/news/index.html","id":"rgeomstats-001","dir":"Changelog","previous_headings":"","what":"rgeomstats 0.0.1","title":"rgeomstats 0.0.1","text":"Added NEWS.md file track changes package. First release includes (n) group manifold SPD matrices along parent classes upon depend.","code":""}]
